{"version":3,"sources":["webpack:///./src/pages/programming/react.mdx"],"names":["layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_5__","name","Layout","assign","parentName","href","className","React","Component","_frontmatter"],"mappings":"qQAKMA,EAAc,GACCC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,OAASC,IAFGL,8BAKnBM,OAAA,WAAS,IAAAC,EAIHJ,KAAKJ,MAFPS,EAFKD,EAELC,WACGT,EAHEU,IAAAF,EAAA,gBAKP,OAAOG,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,UAAUC,OAAQX,KAAKC,OAAQP,YAAaa,OAAOK,OAAO,GAAIlB,EAAaE,GAAQS,WAAYA,GAEjHE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,SACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAC5BE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,MAArD,oBAA+EN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,KAAKjB,MAAO,CAC3IkB,KAAQ,kDADmE,SAG/EP,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,MAAKN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,KAAKjB,MAAO,CACtHkB,KAAQ,4BAD8C,sBAA1D,gBAGAP,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,MAArD,iCAA4FN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,KAAKjB,MAAO,CACxJkB,KAAQ,wCADgF,OAA5F,KAGAP,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,MAArD,aAAwEN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,KAAKjB,MAAO,CACpIkB,KAAQ,0BAD4D,UAAxE,MAIFP,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,yBACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,2BAAqEE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,IAAIjB,MAAO,CAChIkB,KAAQ,kDADyD,4BAArE,KAIAP,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,iMAGAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAAYE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,SAASL,WAAYA,EAAYQ,WAAW,KAAzD,kEAAzC,0IAEoCN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYQ,WAAW,KAA7D,iBAFpC,0BAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,kEAA4GE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,UAA5G,2CAC6BN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,WAD7B,wHAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,KAA+CE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,iBAA/C,qBAAwJN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,aAAxJ,yKAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,KAA+CE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,YAA/C,qHACwCN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,YADxC,OAC8HN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,cAD9H,qKAIJN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYQ,WAAW,KAA7D,iBAJI,+EAMAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,0IACuDE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,iBADvD,0DAEgDN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,YAFhD,qBAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,MAAML,WAAYA,GAAYE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,OAAOL,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAC3GmB,UAAa,wBAD0B,6IAS3CR,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,kUAIAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,8BAAwEE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,KAArD,eAAxE,mJAEmBN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYQ,WAAW,KAA7D,mBAFnB,wBAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,MAAML,WAAYA,GAAYE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,OAAOL,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAC3GmB,UAAa,iBAD0B,4JAQ3CR,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,qNAGAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,QAAkDE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,aAAaL,WAAYA,EAAYQ,WAAW,KAA7D,mBAAlD,qLAGAN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,eACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,MAAML,WAAYA,GAAYE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,OAAOL,WAAYA,EAAYQ,WAAW,MAAMjB,MAAO,CAC3GmB,UAAa,iBAD0B,+zBA4B3CR,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,qQAIAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,GAA7B,kSAIAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAA9B,UACAE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,GAC5BE,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,KAAKL,WAAYA,EAAYQ,WAAW,MAArD,yBAAoFN,OAAAC,EAAA,EAAAD,CAACE,EAAA,OAAD,CAAQC,KAAK,IAAIL,WAAYA,EAAYQ,WAAW,KAAKjB,MAAO,CAChJkB,KAAQ,8DADwE,uCA3HpDE,IAAMC,WAoIjCC,EAAe","file":"component---src-pages-programming-react-mdx-f5f06fd51909cd08808f.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/raul/github/journey-to-fullstack/src/components/Layout.jsx\";\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n      <MDXTag name=\"h1\" components={components}>{`React`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Read through the `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://reactjs.org/docs/getting-started.html\"\n          }}>{`docs`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://overreacted.io/\"\n          }}>{`Dan Abramov's blog`}</MDXTag>{` is amazing.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Build a CLI application using `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://github.com/vadimdemedes/ink\"\n          }}>{`Ink`}</MDXTag>{`.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Check out `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://preactjs.com/\"\n          }}>{`Preact`}</MDXTag>{`.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`React as a UI runtime`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Dan Abramov posted this `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://overreacted.io/react-as-a-ui-runtime/\"\n        }}>{`great overview of\nReact`}</MDXTag>{`.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Some programs output numbers. Other programs output poems. Different languages\nand their runtimes are often optimized for a particular set of use cases, and\nReact is no exception to that.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`React programs usually output a tree that may change over time`}</MDXTag>{`. Let's call\nthis the host tree, because it's part of the host environment, like DOM or iOS.\nIt usually has it's own imperative API (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`appendChild()`}</MDXTag>{` in DOM, for example).`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`React can be more performant by assuming that the host tree is `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`stable`}</MDXTag>{` (not\nchanging too much over time) and `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`regular`}</MDXTag>{` (can be broken down in components an\npatterns). In the case of most UIs, these reasonable assumptions are correct.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`A `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`host instance`}</MDXTag>{` is a node in the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`host tree`}</MDXTag>{`. Host instances have properties\nand can have other host instances as children. As mentioned above, there usually\nexists an API to manipulate these host instances.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`A `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`renderer`}</MDXTag>{` teaches React to talk to a specific host environment and manage its\nhost instances. React renderers can work in `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`mutating`}</MDXTag>{` or `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`persistent`}</MDXTag>{` mode.\nMutating mode is what you'd expect (host instances are completely mutable) and\npersistent mode is for host environments that donâ€™t provide methods like\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`appendChild()`}</MDXTag>{` but instead clone the parent tree and always replace the\ntop-level child.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In the host environment, a host instance (like a DOM node) is the smallest\nbuilding block. In React, the smallest building block is a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`React element`}</MDXTag>{`.\nReact element is a plain JavaScript object that can `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`describe`}</MDXTag>{` a host instance:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`// JSX is a syntax sugar for these objects.\n// <button className=\"blue\" />\n{\n  type: 'button',\n  props: { className: 'blue' }\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`A React element is lightweight and has no host instance tied to it. Again, it is\nmerely a description of what you want to see on the screen. They are immutable.\nIf you want to render something different later, you will describe it with a new\nReact element tree created from scratch. They are like frames in a movie.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Each React renderer has an `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`entry point`}</MDXTag>{`. Itâ€™s the API that lets us tell React\nto render a particular React element tree inside a container host instance. For\nexample, in React DOM, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ReactDOM.render`}</MDXTag>{` is the entry point:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\"\n        }}>{`ReactDOM.render(\n  // { type: 'button', props: { className: 'blue' } }\n  <button className=\"blue\" />,\n  document.getElementById('container')\n);\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Reactâ€™s job is to make the host tree match the provided React element tree. The\nprocess of figuring out what to do to the host instance tree in response to new\ninformation is sometimes called reconciliation.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`When `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ReactDOM.render`}</MDXTag>{` is called is called twice with the same container, React\nneeds to decide when to update the existing host instance to match a the React\nelement, and when to create a new one.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`An example:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\"\n        }}>{`// let domNode = document.createElement('button');\n// domNode.className = 'blue';\n// domContainer.appendChild(domNode);\nReactDOM.render(\n  <button className=\"blue\" />,\n  document.getElementById('container')\n);\n\n// Can reuse host instance? Yes! (button â†’ button)\n// domNode.className = 'red';\nReactDOM.render(\n  <button className=\"red\" />,\n  document.getElementById('container')\n);\n\n// Can reuse host instance? No! (button â†’ p)\n// domContainer.removeChild(domNode);\n// domNode = document.createElement('p');\n// domNode.textContent = 'Hello';\n// domContainer.appendChild(domNode);\nReactDOM.render(<p>Hello</p>, document.getElementById('container'));\n\n// Can reuse host instance? Yes! (p â†’ p)\n// domNode.textContent = 'Goodbye';\nReactDOM.render(<p>Goodbye</p>, document.getElementById('container'));\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This raises a question of identity. The React element may be different every\ntime, but when does it refer to the same host instance conceptually? React is\nquite smart and figures things out most of the time but with dynamic lists, it\nneeds a little help.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`This is why React nags you to specify a special property called key every time\nyou include an array of elements in your output. A key tells React that it\nshould consider an item to be conceptually the same even if it has different\npositions inside its parent element between renders.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Gatsby`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Project: build a site `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"https://www.npmjs.com/package/gatsby-source-google-sheets\"\n          }}>{`sourcing from google\nsheets`}</MDXTag></MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}