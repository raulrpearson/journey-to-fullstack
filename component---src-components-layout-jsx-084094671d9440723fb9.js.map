{"version":3,"sources":["webpack:///./src/components/GlobalStyles.jsx","webpack:///./src/components/GitHubCorner.jsx","webpack:///./src/components/CodeTag.jsx","webpack:///./src/components/Overrides.jsx","webpack:///./src/components/SiteToc.jsx","webpack:///./src/components/PageToc.jsx","webpack:///./src/components/Layout.jsx"],"names":["GlobalStyles","Object","core_browser_esm","styles","GlobalStyles_ref","GitHubCorner","_ref4","url","react_default","a","Fragment","GitHubCorner_ref","href","className","aria-label","width","height","viewBox","css","GitHubCorner_ref2","aria-hidden","d","fill","GitHubCorner_ref3","colorsDictionary","javascript","color","backgroundColor","html","jsx","shell","default","colors","language","CodeTag","_ref","baseHeadingStyle","name","StyledAnchor","styled_base_browser_esm","target","overrides","h1","props","id","kebabCase","children","index_esm","h2","h3","h4","blockquote","Overrides_ref","Overrides_ref2","size","pre","_extends","Overrides_ref3","code","replace","es","defaultProps","theme","_objectSpread","duotoneLight","plain","_ref5","style","tokens","getLineProps","getTokenProps","components_CodeTag","padding","fontFamily","map","line","i","length","key","token","StyledAside","SiteToc","_ref2","hide","gatsby_browser_entry","query","render","data","SiteToc_ref","allMdx","edges","_ref3","_ref3$node","node","_ref3$node$fields","fields","title","slug","to","_1502017113","StyledList","PageToc","headings","PageToc_StyledAside","filter","h","depth","StyledLayout","StyledArticle","Menu","PageTemplate","_this","_React$Component","call","this","state","closed","handleClick","bind","_assertThisInitialized","setState","pageTocEntries","mdx","entry","value","index_es","components","components_GlobalStyles","Layout_ref","components_GitHubCorner","components_SiteToc","Layout_ref2","mdx_renderer_default","body","components_PageToc","onClick","React","Component","pageQuery"],"mappings":"ukBAiDeA,EA9CM,kBACnBC,OAAAC,EAAA,EAAAD,CAACC,EAAA,EAAD,CACEC,OAAMC,ghBCkEKC,EAlEM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAH,OACnBN,OAAAC,EAAA,EAAAD,CAAAO,EAAAC,EAAAC,SAAA,KACET,OAAAC,EAAA,EAAAD,CAACC,EAAA,EAAD,CACEC,OAAMQ,IA4BRV,OAAAC,EAAA,EAAAD,CAAA,KAAGW,KAAML,EAAKM,UAAU,gBAAgBC,aAAW,yBACjDb,OAAAC,EAAA,EAAAD,CAAA,OACEc,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRC,IAAGC,EASHC,cAAY,QAEZnB,OAAAC,EAAA,EAAAD,CAAA,QAAMoB,EAAE,sDACRpB,OAAAC,EAAA,EAAAD,CAAA,QACEoB,EAAE,2LACFC,KAAK,eACLJ,IAAGK,EAGHV,UAAU,aAEZZ,OAAAC,EAAA,EAAAD,CAAA,QACEoB,EAAE,shBACFC,KAAK,eACLT,UAAU,8FC7DdW,EAAmB,CACvBC,WAAY,CACVC,MAAO,UACPC,gBAAiB,WAEnBT,IAAK,CACHQ,MAAO,QACPC,gBAAiB,WAEnBC,KAAM,CACJF,MAAO,QACPC,gBAAiB,WAEnBE,IAAK,CACHH,MAAO,UACPC,gBAAiB,WAEnBG,MAAO,CACLJ,MAAO,UACPC,gBAAiB,WAEnBI,QAAS,CACPL,MAAO,UACPC,gBAAiB,YAIfK,EAAS,SAAAC,GAAQ,OACrBT,EAAiBS,IAAaT,EAAgB,SAoBjCU,EAlBC,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,SAAH,OACdhC,OAAAC,EAAA,EAAAD,CAAA,QACEiB,IAAKA,YAAF,iDAGmBc,EAAOC,GAAUN,gBAHpC,UAIQK,EAAOC,GAAUP,MAJzB,2GAYFO,o3BCrCL,IAAMG,EAAgB,CAAAC,KAAA,UAAAlC,OAAA,+IAehBmC,EAAYrC,OAAAsC,EAAA,EAAAtC,CAAA,KAAAuC,OAAA,YAAAvC,CAAA,CAAAoC,KAAA,UAAAlC,OAAA,giBA8IHsC,EAjBG,CAChBC,GAlHS,SAAAC,GACT,OACE1C,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKkB,EAAkBQ,GAAIC,IAAUF,EAAMG,WAC7C7C,OAAAC,EAAA,EAAAD,CAACqC,EAAD,CAAc1B,KAAI,IAAMiC,IAAUF,EAAMG,WACtC7C,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,OAEDJ,EAAMG,WA6GXE,GAxGS,SAAAL,GACT,OACE1C,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKkB,EAAkBQ,GAAIC,IAAUF,EAAMG,WAC7C7C,OAAAC,EAAA,EAAAD,CAACqC,EAAD,CAAc1B,KAAI,IAAMiC,IAAUF,EAAMG,WACtC7C,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,OAEDJ,EAAMG,WAmGXG,GA9FS,SAAAN,GACT,OACE1C,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKkB,EAAkBQ,GAAIC,IAAUF,EAAMG,WAC7C7C,OAAAC,EAAA,EAAAD,CAACqC,EAAD,CAAc1B,KAAI,IAAMiC,IAAUF,EAAMG,WACtC7C,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,OAEDJ,EAAMG,WAyFXI,GApFS,SAAAP,GACT,OACE1C,OAAAC,EAAA,EAAAD,CAAA,MAAIiB,IAAKkB,EAAkBQ,GAAIC,IAAUF,EAAMG,WAC7C7C,OAAAC,EAAA,EAAAD,CAACqC,EAAD,CAAc1B,KAAI,IAAMiC,IAAUF,EAAMG,WACtC7C,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,OAEDJ,EAAMG,WA+EXK,WA1ES,SAAAR,GAAK,OACd1C,OAAAC,EAAA,EAAAD,CAAA,cACEiB,IAAGkC,GAgBHnD,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,CACE7B,IAAGmC,EAMHC,KAAK,UAENX,EAAMG,WAgDTS,IAAK,SAAAZ,GAAK,OACR1C,OAAAC,EAAA,EAAAD,CAAA,MAAAuD,EAAA,GACMb,EADN,CAEEzB,IAAGuC,MAKPC,KApDW,SAAApD,GAA6B,IAA1BwC,EAA0BxC,EAA1BwC,SACRb,EADkC3B,EAAhBO,UACG8C,QAAQ,YAAa,IAChD,OACE1D,OAAAC,EAAA,EAAAD,CAAC2D,EAAA,EAADJ,EAAA,GACMK,IADN,CAEEH,KAAMZ,EACNb,SAAUA,EACV6B,MAAKC,EAAA,GAAOC,IAAP,CAAqBC,MAAO,CAAEtC,gBAAiB,eAEnD,SAAAuC,GAAA,IAAGrD,EAAHqD,EAAGrD,UAAWsD,EAAdD,EAAcC,MAAOC,EAArBF,EAAqBE,OAAQC,EAA7BH,EAA6BG,aAAcC,EAA3CJ,EAA2CI,cAA3C,OACCrE,OAAAC,EAAA,EAAAD,CAAAO,EAAAC,EAAAC,SAAA,KACET,OAAAC,EAAA,EAAAD,CAACsE,EAAD,CAAStC,SAAUA,IACnBhC,OAAAC,EAAA,EAAAD,CAAA,OACEY,UAAWA,EACXsD,MAAKJ,EAAA,GACAI,EADA,CAEHK,QAAS,gBACTC,WAAY,iBAGbL,EAAOM,IAAI,SAACC,EAAMC,GAEjB,OAAIA,IAAMR,EAAOS,OAAS,EAAU,KAElC5E,OAAAC,EAAA,EAAAD,CAAA,MAAAuD,EAAA,CAAKsB,IAAKF,GAAOP,EAAa,CAAEM,OAAMG,IAAKF,KACxCD,EAAKD,IAAI,SAACK,EAAOD,GAAR,OACR7E,OAAAC,EAAA,EAAAD,CAAA,OAAAuD,EAAA,CAAMsB,IAAKA,GAASR,EAAc,CAAES,QAAOD,uCCrIzDE,EAAW/E,OAAAsC,EAAA,EAAAtC,CAAA,SAAAuC,OAAA,aAAAvC,CAAA,CAAAoC,KAAA,UAAAlC,OAAA,8bAkFF8E,EAhDC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACdlF,OAAAC,EAAA,EAAAD,CAACmF,EAAA,YAAD,CACEC,MAAK,aAeLC,OAAQ,SAAAC,GAAI,OACVtF,OAAAC,EAAA,EAAAD,CAAC+E,EAAD,CACEpC,GAAG,WACH1B,IACEiE,GAAIK,GAQNvF,OAAAC,EAAA,EAAAD,CAAA,UACGsF,EAAKE,OAAOC,MAAMhB,IACjB,SAAAiB,GAAA,IAAAC,EAAAD,EACEE,KACEjD,EAFJgD,EAEIhD,GAFJkD,EAAAF,EAGIG,OAAUC,EAHdF,EAGcE,MAAOC,EAHrBH,EAGqBG,KAHrB,OAMEhG,OAAAC,EAAA,EAAAD,CAAA,MAAI6E,IAAKlC,GACP3C,OAAAC,EAAA,EAAAD,CAACmF,EAAA,KAAD,CAAMc,GAAID,GAAOD,SArC/BT,KAAAY,KCrCInB,EAAW/E,OAAAsC,EAAA,EAAAtC,CAAA,SAAAuC,OAAA,aAAAvC,CAAA,CAAAoC,KAAA,SAAAlC,OAAA,yEAQXiG,EAAUnG,OAAAsC,EAAA,EAAAtC,CAAA,MAAAuC,OAAA,aAAAvC,CAAA,CAAAoC,KAAA,SAAAlC,OAAA,oJA6BDkG,EAfC,SAAAlE,GAAA,IAAGmE,EAAHnE,EAAGmE,SAAH,OACdrG,OAAAC,EAAA,EAAAD,CAACsG,EAAD,CAAa3D,GAAG,YACd3C,OAAAC,EAAA,EAAAD,CAAA,6BACAA,OAAAC,EAAA,EAAAD,CAACmG,EAAD,KACGE,EACEE,OAAO,SAAAC,GAAC,OAAgB,IAAZA,EAAEC,QACdhC,IAAI,SAAA+B,GAAC,OACJxG,OAAAC,EAAA,EAAAD,CAAA,MAAI6E,IAAK2B,EAAElG,KACTN,OAAAC,EAAA,EAAAD,CAAA,KAAGW,KAAM6F,EAAElG,KAAMkG,EAAET,qDClB/B,IAAMW,EAAY1G,OAAAsC,EAAA,EAAAtC,CAAA,OAAAuC,OAAA,YAAAvC,CAAA,CAAAoC,KAAA,UAAAlC,OAAA,gRAyBZyG,EAAa3G,OAAAsC,EAAA,EAAAtC,CAAA,WAAAuC,OAAA,YAAAvC,CAAA,CAAAoC,KAAA,SAAAlC,OAAA,iFAUb0G,EAAI5G,OAAAsC,EAAA,EAAAtC,CAAA,OAAAuC,OAAA,YAAAvC,CAAA,CAAAoC,KAAA,SAAAlC,OAAA,6WAyBJ2G,sBACJ,SAAAA,EAAYnE,GAAO,IAAAoE,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMvE,IAANuE,MACKC,MAAQ,CAAEC,QAAQ,GACvBL,EAAKM,YAAcN,EAAKM,YAAYC,8HAAjBC,CAAAR,IAHFA,oHAMnBM,YAAA,WACEH,KAAKM,SAAS,SAAAL,GAAK,OAAKA,EAAMC,QAAUD,EAAMC,YAGhD9B,OAAA,WACE,IAAMmC,EAAiBP,KAAKvE,MAAM4C,KAAKmC,IAAIpB,SAAS5B,IAAI,SAAAiD,GAAK,MAAK,CAChEpH,IAAG,IAAMsC,IAAU8E,EAAMC,OACzB5B,MAAO2B,EAAMC,MACblB,MAAOiB,EAAMjB,SAEf,OACEzG,OAAAC,EAAA,EAAAD,CAAC4H,EAAA,YAAD,CAAaC,WAAYrF,GACvBxC,OAAAC,EAAA,EAAAD,CAAC8H,EAAD,OACEb,KAAKC,MAAMC,QACXnH,OAAAC,EAAA,EAAAD,CAACC,EAAA,EAAD,CACEC,OAAM6H,IAOV/H,OAAAC,EAAA,EAAAD,CAACgI,EAAD,CACE1H,IAAG,yDAELN,OAAAC,EAAA,EAAAD,CAAC0G,EAAD,KACE1G,OAAAC,EAAA,EAAAD,CAACiI,EAAD,CAAS/C,KAAM+B,KAAKC,MAAMC,SAC1BnH,OAAAC,EAAA,EAAAD,CAAC2G,EAAD,CACE1F,KACGgG,KAAKC,MAAMC,QAAZe,GAMFlI,OAAAC,EAAA,EAAAD,CAACmI,EAAA3H,EAAD,KAAcyG,KAAKvE,MAAM4C,KAAKmC,IAAIW,OAEpCpI,OAAAC,EAAA,EAAAD,CAACqI,EAAD,CAAShC,SAAUmB,KAErBxH,OAAAC,EAAA,EAAAD,CAAC4G,EAAD,CAAM0B,QAASrB,KAAKG,aACjBH,KAAKC,MAAMC,OACVnH,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,CAAQH,GAAG,QAAQU,KAAK,UAExBrD,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,CAASH,GAAG,OAAOU,KAAK,gBAlDTkF,IAAMC,WA0DpBC,EAAS,aAiBP5B","file":"component---src-components-layout-jsx-084094671d9440723fb9.js","sourcesContent":["import React from 'react';\nimport { Global, css } from '@emotion/core';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      html,\n      body {\n        scroll-behavior: smooth;\n      }\n\n      code {\n        background: #f2f2f2;\n        font-family: 'Inconsolata', monospace;\n        font-size: 1em;\n        padding: 3px;\n      }\n\n      pre {\n        font-size: 1em;\n        line-height: 1.2em;\n        background: #f2f2f2;\n        overflow: scroll;\n        padding: 1em;\n        border-radius: 5px;\n        min-width: 0px;\n      }\n\n      pre > code {\n        padding: 0;\n        line-height: 1.2em;\n        min-width: 0px;\n      }\n\n      a {\n        color: #808080;\n      }\n\n      a:hover {\n        color: #404040;\n      }\n\n      ::selection {\n        background-color: #d2d2d2;\n      }\n    `}\n  />\n);\n\nexport default GlobalStyles;\n","// Concept and original code taken from:\n// https://github.com/tholman/github-corners\nimport React from 'react';\nimport { Global, css } from '@emotion/core';\n\nconst GitHubCorner = ({ url }) => (\n  <>\n    <Global\n      styles={css`\n        .github-corner:hover .octo-arm {\n          animation: octocat-wave 560ms ease-in-out;\n        }\n        @keyframes octocat-wave {\n          0%,\n          100% {\n            transform: rotate(0);\n          }\n          20%,\n          60% {\n            transform: rotate(-25deg);\n          }\n          40%,\n          80% {\n            transform: rotate(10deg);\n          }\n        }\n        @media (max-width: 500px) {\n          .github-corner:hover .octo-arm {\n            animation: none;\n          }\n          .github-corner .octo-arm {\n            animation: octocat-wave 560ms ease-in-out;\n          }\n        }\n      `}\n    />\n    <a href={url} className=\"github-corner\" aria-label=\"View source on GitHub\">\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        css={css`\n          fill: #333333;\n          color: #fff;\n          position: fixed;\n          top: 0;\n          border: 0;\n          right: 0;\n          z-index: 100;\n        `}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          css={css`\n            transform-origin: 130px 106px;\n          `}\n          className=\"octo-arm\"\n        />\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        />\n      </svg>\n    </a>\n  </>\n);\n\nexport default GitHubCorner;\n","import React from 'react';\nimport { css } from '@emotion/core';\n\nconst colorsDictionary = {\n  javascript: {\n    color: 'inherit',\n    backgroundColor: '#f5de19'\n  },\n  css: {\n    color: 'white',\n    backgroundColor: '#2965f1'\n  },\n  html: {\n    color: 'white',\n    backgroundColor: '#f16529'\n  },\n  jsx: {\n    color: 'inherit',\n    backgroundColor: '#00d8ff'\n  },\n  shell: {\n    color: 'inherit',\n    backgroundColor: '#dddddd'\n  },\n  default: {\n    color: 'inherit',\n    backgroundColor: '#829ec2'\n  }\n};\n\nconst colors = language =>\n  colorsDictionary[language] || colorsDictionary['default'];\n\nconst CodeTag = ({ language }) => (\n  <span\n    css={css`\n      position: absolute;\n      right: 20px;\n      background-color: ${colors(language).backgroundColor};\n      color: ${colors(language).color};\n      font-size: 0.7em;\n      padding: 0 5px;\n      text-transform: uppercase;\n      border-radius: 0 0 5px 5px;\n      filter: opacity(85%);\n    `}\n  >\n    {language}\n  </span>\n);\n\nexport default CodeTag;\n","import React from 'react';\nimport { FaLink, FaQuoteRight } from 'react-icons/fa';\nimport kebabCase from 'lodash.kebabcase';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport duotoneLight from 'prism-react-renderer/themes/duotoneLight';\n\nimport CodeTag from './CodeTag';\n\nconst baseHeadingStyle = css`\n  position: relative;\n  &:hover > a > svg {\n    visibility: visible;\n  }\n  a:hover > svg {\n    visibility: visible;\n  }\n  @media (hover: none) {\n    a > svg {\n      visibility: visible;\n    }\n  }\n`;\n\nconst StyledAnchor = styled.a`\n  font-size: 0.8rem;\n  padding: 0.5em 1em 0.5em 0.5em;\n  color: currentColor;\n  position: absolute;\n  left: -1.3rem;\n\n  & > svg {\n    visibility: hidden;\n  }\n`;\n\nconst H1 = props => {\n  return (\n    <h1 css={baseHeadingStyle} id={kebabCase(props.children)}>\n      <StyledAnchor href={`#${kebabCase(props.children)}`}>\n        <FaLink />\n      </StyledAnchor>\n      {props.children}\n    </h1>\n  );\n};\n\nconst H2 = props => {\n  return (\n    <h2 css={baseHeadingStyle} id={kebabCase(props.children)}>\n      <StyledAnchor href={`#${kebabCase(props.children)}`}>\n        <FaLink />\n      </StyledAnchor>\n      {props.children}\n    </h2>\n  );\n};\n\nconst H3 = props => {\n  return (\n    <h3 css={baseHeadingStyle} id={kebabCase(props.children)}>\n      <StyledAnchor href={`#${kebabCase(props.children)}`}>\n        <FaLink />\n      </StyledAnchor>\n      {props.children}\n    </h3>\n  );\n};\n\nconst H4 = props => {\n  return (\n    <h4 css={baseHeadingStyle} id={kebabCase(props.children)}>\n      <StyledAnchor href={`#${kebabCase(props.children)}`}>\n        <FaLink />\n      </StyledAnchor>\n      {props.children}\n    </h4>\n  );\n};\n\nconst BQ = props => (\n  <blockquote\n    css={css`\n      background-color: #f2f2f2;\n      padding: 1.3em;\n      border-radius: 5px;\n      position: relative;\n      --margin: 0;\n      @media (min-width: 630px) {\n        --margin: calc(32 * ((100vw - 630px) / (800 - 630)));\n      }\n      @media (min-width: 800px) {\n        --margin: 32px;\n      }\n      margin-right: var(--margin);\n      margin-left: var(--margin);\n    `}\n  >\n    <FaQuoteRight\n      css={css`\n        color: #808080;\n        position: absolute;\n        top: -0.5em;\n        left: -0.5em;\n      `}\n      size=\"1.8em\"\n    />\n    {props.children}\n  </blockquote>\n);\n\nconst Code = ({ children, className }) => {\n  const language = className.replace(/language-/, '');\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={{ ...duotoneLight, plain: { backgroundColor: '#f2f2f2' } }}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <>\n          <CodeTag language={language} />\n          <pre\n            className={className}\n            style={{\n              ...style,\n              padding: '1.5em 1em 1em',\n              fontFamily: 'Inconsolata'\n            }}\n          >\n            {tokens.map((line, i) => {\n              // A bit of a hack to avoid rendering the last empty line\n              if (i === tokens.length - 1) return null;\n              return (\n                <div key={i} {...getLineProps({ line, key: i })}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              );\n            })}\n          </pre>\n        </>\n      )}\n    </Highlight>\n  );\n};\n\nconst overrides = {\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  blockquote: BQ,\n  pre: props => (\n    <div\n      {...props}\n      css={css`\n        position: relative;\n      `}\n    />\n  ),\n  code: Code\n};\n\nexport default overrides;\n","import React from 'react';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 0;\n  align-self: start;\n  height: 100vh;\n  overflow: scroll;\n  z-index: 90;\n\n  @media (max-width: 850px) {\n    background-color: white;\n    position: fixed;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n    margin-left: 0;\n    & > li {\n      text-transform: uppercase;\n      font-family: 'Avenir Next';\n      font-weight: bold;\n    }\n    a {\n      text-decoration: none;\n      color: gray;\n    }\n    a:hover {\n      filter: brightness(50%);\n    }\n  }\n`;\n\nconst SiteToc = ({ hide }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMdx {\n          edges {\n            node {\n              id\n              fields {\n                title\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <StyledAside\n        id=\"site-toc\"\n        css={\n          hide &&\n          css`\n            @media (max-width: 850px) {\n              display: none;\n            }\n          `\n        }\n      >\n        <ul>\n          {data.allMdx.edges.map(\n            ({\n              node: {\n                id,\n                fields: { title, slug }\n              }\n            }) => (\n              <li key={id}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          )}\n        </ul>\n      </StyledAside>\n    )}\n  />\n);\n\nexport default SiteToc;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 0;\n  align-self: start;\n  height: 100vh;\n  overflow: scroll;\n`;\n\nconst StyledList = styled.ul`\n  font-family: 'Avenir Next';\n  list-style-type: none;\n  padding-left: 0;\n  margin-left: 0;\n  a {\n    text-decoration: none;\n    color: gray;\n  }\n  a:hover {\n    filter: brightness(50%);\n  }\n`;\n\nconst PageToc = ({ headings }) => (\n  <StyledAside id=\"page-toc\">\n    <h4>IN THIS ARTICLE</h4>\n    <StyledList>\n      {headings\n        .filter(h => h.depth === 2)\n        .map(h => (\n          <li key={h.url}>\n            <a href={h.url}>{h.title}</a>\n          </li>\n        ))}\n    </StyledList>\n  </StyledAside>\n);\n\nexport default PageToc;\n","import React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport MDXRenderer from 'gatsby-plugin-mdx/mdx-renderer';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/core';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport { graphql } from 'gatsby';\nimport kebabCase from 'lodash.kebabcase';\n\nimport GlobalStyles from './GlobalStyles';\nimport GitHubCorner from './GitHubCorner';\nimport overrides from './Overrides';\nimport SiteToc from './SiteToc';\nimport PageToc from './PageToc';\n\nconst StyledLayout = styled.div`\n  display: grid;\n  width: 100vw;\n  box-sizing: border-box;\n  grid-template-columns: 25ch auto 25ch;\n  gap: 1em;\n  margin: 0;\n\n  & > * {\n    padding: 2em 1em;\n  }\n\n  @media (max-width: 1100px) {\n    grid-template-columns: 25ch 1fr;\n\n    & > aside#page-toc {\n      display: none;\n    }\n  }\n\n  @media (max-width: 850px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StyledArticle = styled.article`\n  min-width: 100px;\n  max-width: 100%;\n  justify-self: center;\n\n  & > div {\n    max-width: 600px;\n  }\n`;\n\nconst Menu = styled.div`\n  position: fixed;\n  bottom: 1em;\n  right: 1em;\n  z-index: 100;\n  width: 3em;\n  height: 3em;\n  border-radius: 1.5em;\n  box-sizing: border-box;\n  background-color: #333333;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  svg {\n    margin: 0 auto;\n    color: white;\n  }\n\n  @media (min-width: 851px) {\n    display: none;\n  }\n`;\n\nclass PageTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { closed: true };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => (state.closed = !state.closed));\n  }\n\n  render() {\n    const pageTocEntries = this.props.data.mdx.headings.map(entry => ({\n      url: `#${kebabCase(entry.value)}`,\n      title: entry.value,\n      depth: entry.depth\n    }));\n    return (\n      <MDXProvider components={overrides}>\n        <GlobalStyles />\n        {!this.state.closed && (\n          <Global\n            styles={css`\n              html {\n                overflow-y: hidden;\n              }\n            `}\n          />\n        )}\n        <GitHubCorner\n          url={`https://github.com/raulrpearson/journey-to-fullstack`}\n        />\n        <StyledLayout>\n          <SiteToc hide={this.state.closed} />\n          <StyledArticle\n            css={\n              !this.state.closed &&\n              css`\n                overflow: hidden;\n              `\n            }\n          >\n            <MDXRenderer>{this.props.data.mdx.body}</MDXRenderer>\n          </StyledArticle>\n          <PageToc headings={pageTocEntries} />\n        </StyledLayout>\n        <Menu onClick={this.handleClick}>\n          {this.state.closed ? (\n            <FaBars id=\"times\" size=\"1.4em\" />\n          ) : (\n            <FaTimes id=\"bars\" size=\"1.4em\" />\n          )}\n        </Menu>\n      </MDXProvider>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query SingleMdxQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      fields {\n        title\n        slug\n      }\n      body\n      headings {\n        value\n        depth\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"sourceRoot":""}