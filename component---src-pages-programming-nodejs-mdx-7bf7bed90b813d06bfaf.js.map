{"version":3,"sources":["webpack:///./src/pages/programming/nodejs.mdx"],"names":["Heading","_ref","text","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","layoutProps","MDXContent","props","_this","_React$Component","call","this","layout","DefaultLayout","render","_this$props","components","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_5__","name","Layout","assign","pageContext","frontmatter","title","parentName","href","className","React","Component","_frontmatter"],"mappings":"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","file":"component---src-pages-programming-nodejs-mdx-7bf7bed90b813d06bfaf.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/raul/github/journey-to-fullstack/src/components/Layout.jsx\";\nexport const Heading = ({\n  text\n}) => <h1>{text}</h1>;\nconst layoutProps = {\n  Heading\n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n      <Heading text={props.pageContext.frontmatter.title} />\n      <MDXTag name=\"h2\" components={components}>{`Environment variables`}</MDXTag>\n      <MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://medium.com/the-node-js-collection/making-your-node-js-work-everywhere-with-environment-variables-2da8cdf6e786\"\n        }}>{`This\narticle`}</MDXTag>{`\nmakes a case for environment variables.`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`Why?`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Because they externalize all environment specific aspects of your app and\nkeep your app encapsulated. Now you can run your app anywhere by modifying the\nenvironment variables `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`without changing your code and without rebuilding it`}</MDXTag>{`!`}</MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`When?`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Some examples:`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Which HTTP port to listen on`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`What path and folder your files are located in, that you want to serve`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pointing to a development, staging, test, or production database`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`URLs to server resources`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`CDNs for testing vs. production`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Even a marker to label your app in the UI by the environment it lives in`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h3\" components={components}>{`How?`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using the local environment (duh) and/or command line. We're talking about\n`}<MDXTag name=\"em\" components={components} parentName=\"li\">{`environment`}</MDXTag>{` variables, after all. They could be present in memory as part of\nthe execution context or you can pass them through the command line. Assuming\nyou use bash:`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-bash\"\n        }}>{`PORT=8626 node server.js\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using .env file. Keeps things tidy and convenient and avoids typing mistakes.\nI also think the previous solution has a higher risk of leaking data to the\nenvironment. When you add a variable to bash, other processes might be able to\naccess that value. When you use dotenv, I think the variables are attached to\nyour application process and can only be seen by it.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`In any case, just use dotenv. Add your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.env`}</MDXTag>{` file to your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.gitignore`}</MDXTag>{` and you\nalso have a convenient way of keeping your secrets accessible and (somewhat)\nprotected.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"https://www.npmjs.com/package/dotenv\"\n        }}>{`dotenv docs`}</MDXTag>{` for details on how\nto use it. I've seen two different ways of accessing values:`}</MDXTag>\n      <MDXTag name=\"ol\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Using the dot notation: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`process.env.PORT`}</MDXTag></MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ol\">{`Using the bracket notation: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`process.env['PORT']`}</MDXTag></MDXTag>\n      </MDXTag>\n      <MDXTag name=\"p\" components={components}>{`I'm assuming they're equivalent and who cares, but I like bracket notation\nbetter. It would make it easier to use them programmatically like this:`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-javascript\"\n        }}>{`const keys = ['PORT', 'ENDPOINT', 'SECRET'];\nfor (key of keys) {\n  let value = process.env[key];\n  // do something with value\n}\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"p\" components={components}>{`For consistency, why not use that notation everywhere.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Also follow the recommendation of a single .env file per environment. From `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\n          \"href\": \"http://12factor.net/config\"\n        }}>{`The\nTwelve-Factor App`}</MDXTag>{`:`}</MDXTag>\n      <MDXTag name=\"blockquote\" components={components}>\n        <MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`In a twelve-factor app, env vars are granular controls, each fully orthogonal\nto other env vars. They are never grouped together as “environments”, but\ninstead are independently managed for each deploy. This is a model that scales\nup smoothly as the app naturally expands into more deploys over its lifetime.`}</MDXTag>\n      </MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}