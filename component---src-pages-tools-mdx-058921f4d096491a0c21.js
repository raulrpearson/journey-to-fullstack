(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{169:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return u}),a.d(n,"_frontmatter",function(){return b});a(87);var t=a(88),o=a.n(t),c=a(8),m=a.n(c),p=a(4),s=a(0),r=a.n(s),i=a(31),l=a(173),g={},u=function(e){function n(n){var a;return(a=e.call(this,n)||this).layout=l.a,a}return m()(n,e),n.prototype.render=function(){var e=this.props,n=e.components,a=o()(e,["components"]);return Object(p.c)(i.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},g,a),components:n},Object(p.c)(i.MDXTag,{name:"h1",components:n},"Tools"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://github.com/semantic-release/semantic-release"}},"Semantic release"),"\nautomates the whole package release workflow including: determining the next\nversion number, generating the release notes and publishing the package. This\nremoves the immediate connection between human emotions and version numbers,\nstrictly following the Semantic Versioning specification."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://editorconfig.org/"}},"Editorconfig")," helps maintain consistent coding\nstyles for multiple developers working on the same project across various\neditors and IDEs. The EditorConfig project consists of a file format for\ndefining coding styles and a collection of text editor plugins that enable\neditors to read the file format and adhere to defined styles. EditorConfig files\nare easily readable and they work nicely with version control systems."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://lab.github.com/courses"}},"GitHub courses")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/"}},"mkcert")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"iTerm2"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"fish"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Practice ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://docs.emmet.io/cheat-sheet/"}},"Emmet"),":",Object(p.c)(i.MDXTag,{name:"ul",components:n,parentName:"li"},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Childs"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Siblings"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Climb-up"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Multiplication"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Item numbering"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Grouping"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Id and class")))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"vim"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"http://vimcasts.org/episodes/tabs-and-spaces/"}},"vimcasts")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Understand ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"http://vimcasts.org/episodes/tabs-and-spaces/"}},"indentation and tabs"),Object(p.c)(i.MDXTag,{name:"ul",components:n,parentName:"li"},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"tabstop: width of a tab character"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"expandtab: set to use spaces instead of tab chars"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"softtabstop: set to fine tune amount of whitespace to be inserted"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"shiftwidth: amount of ws to insert or remove using indentation"))),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"commands in normal mode")),Object(p.c)(i.MDXTag,{name:"h2",components:n},"VS Code"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Pair programming with ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://visualstudio.microsoft.com/services/live-share/"}},"VS Live\nShare")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://dev.to/vintharas/boost-your-coding-fu-with-visual-studio-code-and-vimboost-your-coding-fu-with-visual-studio-code-and-vim-502h"}},"Vim in VS\nCode")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://vscodecandothat.com/"}},"VS Code can do that"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"Browser Devtools"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://www.youtube.com/channel/UCwktrTEq-dC49H1NGAC0dWQ"}},"Youtube")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://umaar.com/dev-tips/"}},"Site"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"nnn"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://github.com/jarun/nnn#usage"}},"Usage"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"tmux"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://robots.thoughtbot.com/a-tmux-crash-course"}},"Crash course")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://gist.githubusercontent.com/spicycode/1229612/raw/e24eac21b20020b0cce10020e979ec0a142a356c/tmux.conf"}},"tmux.conf")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://leanpub.com/the-tao-of-tmux/read"}},"The Tao of tmux"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"Daily practice"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Read and study Clean Code"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Read and study The Pragmatic Programmer"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Learn about CI tools and workflows")),Object(p.c)(i.MDXTag,{name:"h2",components:n},"Version control"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Understand and write about Git flows and GitHub pull requests")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.3/"}},"Conventional commits"))),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Great article about ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://hackernoon.com/these-6-essential-tools-will-maintain-your-npm-modules-for-you-4cbbee88e0cb"}},"code\nmaintenance")))),Object(p.c)(i.MDXTag,{name:"h3",components:n},"Understanding ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"upstream")),Object(p.c)(i.MDXTag,{name:"p",components:n},"GitHub tells you to use ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"git push -u origin master"),". ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://stackoverflow.com/a/37770744"}},"This SO\nanswer")," gives some insight into what\nupstream is and why that is required."),Object(p.c)(i.MDXTag,{name:"p",components:n},"Some of my takeaways:"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"An upstream is simply another branch name, usually a remote-tracking branch,\nassociated with a (regular, local) branch."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Each branch can have 0 or 1 upstream."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Setting an upstream is convenient becaues then many git commands can be used\nwithout arguments to produce expected results (i.e. ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"fetch"),", ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"merge"),",\n",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"rebase"),", ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"pull"),", ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"status"),")"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"push")," = ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"fetch")," followed by ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"merge")," or ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"rebase"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"npm and yarn"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Understand and write about npm, npx, ncu, package.json, etc."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Understand npm audit results"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Understand how to create a package.json from scratch"),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"yarn workspaces and monorepos")),Object(p.c)(i.MDXTag,{name:"h3",components:n},"Publishing on npm"),Object(p.c)(i.MDXTag,{name:"p",components:n},"This ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://medium.freecodecamp.org/how-to-make-a-beautiful-tiny-npm-package-and-publish-it-2881d4307f78"}},"article from\nFreecodecamp"),"\ngoes over the least possible work from zero to published package. In summary:"),Object(p.c)(i.MDXTag,{name:"ol",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ol"},"Put your code inside a folder. The ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"package.json")," in that folder should\nhave a name and version at the very least."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ol"},"Create an account on npm and log in using the command line: ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"npm adduser")," or\n",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"npm login"),"."),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ol"},"Publish with ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"npm publish")," or ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"npm publish --access=public")," if you've used a\nscoped package name, since scoped packages are published privately by\ndefault (and you need a paid account to publish privately).")),Object(p.c)(i.MDXTag,{name:"p",components:n},"Some additional notes:"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Those steps will get you from zero to published, but there's a bit more that\nyou'd typically want to do: add a README, a LICENSE, more fields to the\n",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"package.json")," files, badges to your README file, an .npmignore file, etc.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Understand ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://semver.org/"}},"semantic versioning")," so that you can assign\nversions correctly. Note that you can use ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm version [major|minor|patch]")," to\nupdate your ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"package.json")," from the command line. The command has more options,\ncheck them out.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Understand ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://docs.npmjs.com/misc/scope"}},"package scoping")," in case you\nwant to use that feature.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://blog.greenkeeper.io/one-simple-trick-for-javascript-package-maintainers-to-avoid-breaking-their-user-s-software-and-to-6edf06dc5617"}},"Understand")," ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://docs.npmjs.com/cli/dist-tag"}},Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"npm dist-tag"))," and how to\nuse ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm publish --tag=<tag-name>"),". When you publish, npm puts that new\nversion on the ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"latest")," tag by default. If you're maintaining different major\nversions of your package, this could create problems for your users. If you\npublish a patch for your 3.x version, your users will install that instead of\nyour latest 4.x. Learn how to use tags to manage this. You could have ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"next"),"\nfor a 5.x work in progress, ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"latest")," for your stable up to date 4.x work and\n",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"3.x-latest")," for maintenance."))),Object(p.c)(i.MDXTag,{name:"h3",components:n},"Developing an npm package"),Object(p.c)(i.MDXTag,{name:"p",components:n},"The short version: use ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://docs.npmjs.com/cli/link.html"}},Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"npm link")),". But\nif you need to test preinstall/postinstall hooks for your package, ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm link"),"\nwon’t run those hooks, so ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://medium.com/@the1mills/how-to-test-your-npm-module-without-publishing-it-every-5-minutes-1c4cb4b369be"}},"you\ndo"),":"),Object(p.c)(i.MDXTag,{name:"pre",components:n},Object(p.c)(i.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"npm install /absolute/local/path/to/your/other/package\n")),Object(p.c)(i.MDXTag,{name:"p",components:n},"Note that ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm link")," creates a symlink to ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<your-package>")," in the global space,\nand then when you call npm link viking from ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<your-project>"),", it creates a\nsymlink not directly to ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<your-package>"),", but rather to the global symlink. This\nis an important differences if you are using different global Node.js versions,\ne.g., NVM. ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm install /absolute/path/viking")," will alter ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"package.json"),", ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"npm link")," does not."),Object(p.c)(i.MDXTag,{name:"p",components:n},"Check out ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://lernajs.io/"}},"Lerna"),", a tool that optimizes the workflow\naround managing multi-package repositories with git and npm."),Object(p.c)(i.MDXTag,{name:"h2",components:n},"Resources and assets"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},"Open-source illustrations at ",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://undraw.co/"}},"Undraw")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://iconscout.com/unicons"}},"Unicons")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://twitter.com/wesbos/status/1093167287119609858"}},"Wes' background pattern\nresources"))),Object(p.c)(i.MDXTag,{name:"h2",components:n},"Bundlers"),Object(p.c)(i.MDXTag,{name:"p",components:n},"In the context of web applications, bundlers are tools that transform your\nsource files to make them optimized for deployment. I think that mainly means\nsmaller size and less network requests, but it also includes things like\nmanaging the transformation of things like SASS (good to have in development)\ninto CSS (required in deployment)."),Object(p.c)(i.MDXTag,{name:"p",components:n},"These are some popular bundlers:"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://webpack.js.org/"}},"Webpack")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://parceljs.org/"}},"Parcel")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"http://browserify.org/"}},"Browserify")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://rollupjs.org/"}},"Rollup"))),Object(p.c)(i.MDXTag,{name:"p",components:n},"Here's a\n",Object(p.c)(i.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://medium.com/js-imaginea/comparing-bundlers-webpack-rollup-parcel-f8f5dc609cfd"}},"comparison"),"\nof Webpack, Parcel and Rollup. I'm currently debating myself between Webpack and\nParcel. Webpack is everywhere, but Parcel seems to provide a better DX. I think\nI'll try to focus on Parcel for now and be ready to move to Webpack depending of\nhow they both evolve."),Object(p.c)(i.MDXTag,{name:"p",components:n},"Some of the features to understand bundlers:"),Object(p.c)(i.MDXTag,{name:"ul",components:n},Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Configuration. I honestly don't see what the big deal is, but it is nice to\nhave as zero-config as possible. It seems Parcel provides the lowest config\nrequirement.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Entry points. Where does the bundler start parsing to do it's thing. I like\nthat parcel provides an ",Object(p.c)(i.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"index.html")," entry point out of the box.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Transformations. SASS to CSS, for example. Added with plugins. Again, Parcel\nseems to handle the most without plugins.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Tree shaking. Eliminating dead code. Not supported by Parcel yet.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Dev server. Watching for changes to your source files and automatically\nrebuilding your bundles.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Hot Module Replacement (HMR). Being able to reload parts of your running app\nwithout having to reload the whole app. Speeds up development.")),Object(p.c)(i.MDXTag,{name:"li",components:n,parentName:"ul"},Object(p.c)(i.MDXTag,{name:"p",components:n,parentName:"li"},"Code splitting. Creating bundles that are broken up into different parts.\nImproves UX by requiring a smaller initial download. The user can start using\nthe app while the rest of it is being fetched in the background."))))},n}(r.a.Component),b={}}}]);
//# sourceMappingURL=component---src-pages-tools-mdx-058921f4d096491a0c21.js.map