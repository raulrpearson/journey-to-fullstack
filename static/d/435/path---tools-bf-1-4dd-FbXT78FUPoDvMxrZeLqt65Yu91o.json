{"data":{"mdx":{"id":"fe9c9059-d2d7-53d9-ac79-bf522059b944","fields":{"title":"Tools","slug":"/tools"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Tools`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/semantic-release/semantic-release\"\n      }\n    }, `Semantic release`), `\nautomates the whole package release workflow including: determining the next\nversion number, generating the release notes and publishing the package. This\nremoves the immediate connection between human emotions and version numbers,\nstrictly following the Semantic Versioning specification.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://editorconfig.org/\"\n      }\n    }, `Editorconfig`), ` helps maintain consistent coding\nstyles for multiple developers working on the same project across various\neditors and IDEs. The EditorConfig project consists of a file format for\ndefining coding styles and a collection of text editor plugins that enable\neditors to read the file format and adhere to defined styles. EditorConfig files\nare easily readable and they work nicely with version control systems.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://lab.github.com/courses\"\n      }\n    }, `GitHub courses`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/\"\n      }\n    }, `mkcert`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `iTerm2`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `fish`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Practice `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://docs.emmet.io/cheat-sheet/\"\n      }\n    }, `Emmet`), `:`, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Childs`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Siblings`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Climb-up`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Multiplication`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Item numbering`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Grouping`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Id and class`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `vim`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://vimcasts.org/episodes/tabs-and-spaces/\"\n      }\n    }, `vimcasts`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Understand `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://vimcasts.org/episodes/tabs-and-spaces/\"\n      }\n    }, `indentation and tabs`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `tabstop: width of a tab character`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `expandtab: set to use spaces instead of tab chars`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `softtabstop: set to fine tune amount of whitespace to be inserted`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `shiftwidth: amount of ws to insert or remove using indentation`))), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `commands in normal mode`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `VS Code`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Pair programming with `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://visualstudio.microsoft.com/services/live-share/\"\n      }\n    }, `VS Live\nShare`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://dev.to/vintharas/boost-your-coding-fu-with-visual-studio-code-and-vimboost-your-coding-fu-with-visual-studio-code-and-vim-502h\"\n      }\n    }, `Vim in VS\nCode`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://vscodecandothat.com/\"\n      }\n    }, `VS Code can do that`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Browser Devtools`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.youtube.com/channel/UCwktrTEq-dC49H1NGAC0dWQ\"\n      }\n    }, `Youtube`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://umaar.com/dev-tips/\"\n      }\n    }, `Site`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `nnn`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://github.com/jarun/nnn#usage\"\n      }\n    }, `Usage`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `tmux`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://robots.thoughtbot.com/a-tmux-crash-course\"\n      }\n    }, `Crash course`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://gist.githubusercontent.com/spicycode/1229612/raw/e24eac21b20020b0cce10020e979ec0a142a356c/tmux.conf\"\n      }\n    }, `tmux.conf`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://leanpub.com/the-tao-of-tmux/read\"\n      }\n    }, `The Tao of tmux`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Daily practice`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Read and study Clean Code`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Read and study The Pragmatic Programmer`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Learn about CI tools and workflows`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Version control`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Understand and write about Git flows and GitHub pull requests`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.conventionalcommits.org/en/v1.0.0-beta.3/\"\n      }\n    }, `Conventional commits`))), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Great article about `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://hackernoon.com/these-6-essential-tools-will-maintain-your-npm-modules-for-you-4cbbee88e0cb\"\n      }\n    }, `code\nmaintenance`)))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Understanding `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"h3\"\n    }, `upstream`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `GitHub tells you to use `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `git push -u origin master`), `. `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://stackoverflow.com/a/37770744\"\n      }\n    }, `This SO\nanswer`), ` gives some insight into what\nupstream is and why that is required.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Some of my takeaways:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `An upstream is simply another branch name, usually a remote-tracking branch,\nassociated with a (regular, local) branch.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Each branch can have 0 or 1 upstream.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Setting an upstream is convenient becaues then many git commands can be used\nwithout arguments to produce expected results (i.e. `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `fetch`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `merge`), `,\n`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `rebase`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `pull`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `status`), `)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `push`), ` = `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `fetch`), ` followed by `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `merge`), ` or `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `rebase`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `JavaScript module and package managers`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Understand and write about npm, npx, ncu, package.json, etc.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Understand npm audit results`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Understand how to create a package.json from scratch`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `yarn workspaces and monorepos`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Check out `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.pikapkg.com/about/\"\n      }\n    }, `Pika`), `. Pika's mission is to make\nmodern JavaScript more accessible by making it easier to find, publish,\ninstall, and use modern packages on npm.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Lerna`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Check out `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.npmjs.com/package/yalc\"\n      }\n    }, `yalc`), `. Better workflow than\nnpm/yarn link for package authors.`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Publishing on npm`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://medium.freecodecamp.org/how-to-make-a-beautiful-tiny-npm-package-and-publish-it-2881d4307f78\"\n      }\n    }, `article from\nFreecodecamp`), `\ngoes over the least possible work from zero to published package. In summary:`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Put your code inside a folder. The `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `package.json`), ` in that folder should\nhave a name and version at the very least.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Create an account on npm and log in using the command line: `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm adduser`), ` or\n`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm login`), `.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Publish with `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm publish`), ` or `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm publish --access=public`), ` if you've used a\nscoped package name, since scoped packages are published privately by\ndefault (and you need a paid account to publish privately).`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Some additional notes:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Those steps will get you from zero to published, but there's a bit more that\nyou'd typically want to do: add a README, a LICENSE, more fields to the\n`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `package.json`), ` files, badges to your README file, an .npmignore file, etc.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Understand `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://semver.org/\"\n      }\n    }, `semantic versioning`), ` so that you can assign\nversions correctly. Note that you can use `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm version [major|minor|patch]`), ` to\nupdate your `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `package.json`), ` from the command line. The command has more options,\ncheck them out.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Understand `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://docs.npmjs.com/misc/scope\"\n      }\n    }, `package scoping`), ` in case you\nwant to use that feature.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://blog.greenkeeper.io/one-simple-trick-for-javascript-package-maintainers-to-avoid-breaking-their-user-s-software-and-to-6edf06dc5617\"\n      }\n    }, `Understand`), ` `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://docs.npmjs.com/cli/dist-tag\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"a\"\n    }, `npm dist-tag`)), ` and how to\nuse `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm publish --tag=<tag-name>`), `. When you publish, npm puts that new\nversion on the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `latest`), ` tag by default. If you're maintaining different major\nversions of your package, this could create problems for your users. If you\npublish a patch for your 3.x version, your users will install that instead of\nyour latest 4.x. Learn how to use tags to manage this. You could have `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `next`), `\nfor a 5.x work in progress, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `latest`), ` for your stable up to date 4.x work and\n`, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `3.x-latest`), ` for maintenance.`))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Developing an npm package`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The short version: use `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://docs.npmjs.com/cli/link.html\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"a\"\n    }, `npm link`)), `. But\nif you need to test preinstall/postinstall hooks for your package, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm link`), `\nwon’t run those hooks, so `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://medium.com/@the1mills/how-to-test-your-npm-module-without-publishing-it-every-5-minutes-1c4cb4b369be\"\n      }\n    }, `you\ndo`), `:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-bash\"\n      }\n    }, `npm install /absolute/local/path/to/your/other/package\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Note that `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm link`), ` creates a symlink to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `<your-package>`), ` in the global space,\nand then when you call npm link viking from `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `<your-project>`), `, it creates a\nsymlink not directly to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `<your-package>`), `, but rather to the global symlink. This\nis an important differences if you are using different global Node.js versions,\ne.g., NVM. `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm install /absolute/path/viking`), ` will alter `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `package.json`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `npm link`), ` does not.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Check out `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://lernajs.io/\"\n      }\n    }, `Lerna`), `, a tool that optimizes the workflow\naround managing multi-package repositories with git and npm.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Resources and assets`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Open-source illustrations at `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://undraw.co/\"\n      }\n    }, `Undraw`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://iconscout.com/unicons\"\n      }\n    }, `Unicons`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://twitter.com/wesbos/status/1093167287119609858\"\n      }\n    }, `Wes' background pattern\nresources`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Bundlers`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `In the context of web applications, bundlers are tools that transform your\nsource files to make them optimized for deployment. I think that mainly means\nsmaller size and less network requests, but it also includes things like\nmanaging the transformation of things like SASS (good to have in development)\ninto CSS (required in deployment).`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `These are some popular bundlers:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://webpack.js.org/\"\n      }\n    }, `Webpack`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://parceljs.org/\"\n      }\n    }, `Parcel`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://browserify.org/\"\n      }\n    }, `Browserify`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://rollupjs.org/\"\n      }\n    }, `Rollup`))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Here's a\n`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://medium.com/js-imaginea/comparing-bundlers-webpack-rollup-parcel-f8f5dc609cfd\"\n      }\n    }, `comparison`), `\nof Webpack, Parcel and Rollup. I'm currently debating myself between Webpack and\nParcel. Webpack is everywhere, but Parcel seems to provide a better DX. I think\nI'll try to focus on Parcel for now and be ready to move to Webpack depending of\nhow they both evolve.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Some of the features to understand bundlers:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Configuration. I honestly don't see what the big deal is, but it is nice to\nhave as zero-config as possible. It seems Parcel provides the lowest config\nrequirement.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Entry points. Where does the bundler start parsing to do it's thing. I like\nthat parcel provides an `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `index.html`), ` entry point out of the box.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Transformations. SASS to CSS, for example. Added with plugins. Again, Parcel\nseems to handle the most without plugins.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Tree shaking. Eliminating dead code. Not supported by Parcel yet.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Dev server. Watching for changes to your source files and automatically\nrebuilding your bundles.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Hot Module Replacement (HMR). Being able to reload parts of your running app\nwithout having to reload the whole app. Speeds up development.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Code splitting. Creating bundles that are broken up into different parts.\nImproves UX by requiring a smaller initial download. The user can start using\nthe app while the rest of it is being fetched in the background.`))));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"headings":[{"value":"Tools","depth":1},{"value":"vim","depth":2},{"value":"VS Code","depth":2},{"value":"Browser Devtools","depth":2},{"value":"nnn","depth":2},{"value":"tmux","depth":2},{"value":"Daily practice","depth":2},{"value":"Version control","depth":2},{"value":"Understanding upstream","depth":3},{"value":"JavaScript module and package managers","depth":2},{"value":"Publishing on npm","depth":3},{"value":"Developing an npm package","depth":3},{"value":"Resources and assets","depth":2},{"value":"Bundlers","depth":2}]}},"pageContext":{"id":"fe9c9059-d2d7-53d9-ac79-bf522059b944"}}