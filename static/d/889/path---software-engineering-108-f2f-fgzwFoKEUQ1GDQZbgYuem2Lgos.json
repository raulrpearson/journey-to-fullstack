{"data":{"mdx":{"id":"55bbff86-b1fb-5419-b7ab-eadafc070e56","fields":{"title":"Software Engineering","slug":"/software-engineering"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h1\",\n      components: components\n    }, `Software engineering`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Pair programming`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Tuple.app has a great `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://tuple.app/pair-programming-guide/\"\n      }\n    }, `guide on pair\nprogramming`), `. As its name implies,\nthis practice entails programming in pairs (and sometimes groups). The premise\nis that this produces better code.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `From `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.jamesshore.com/Agile-Book/pair_programming.html\"\n      }\n    }, `The Art of\nAgile`), `:`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `It's more fun than it sounds: two programmers at one computer. One drives; the\nother navigates. Switching roles fluidly, they constantly communicate.\nTogether, they accomplish better work more quickly than either could alone.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `The driver types. She focuses on tactics--writing clean code that compiles and\nruns. The navigator focuses on strategy--how the code fits into the overall\ndesign, which tests will drive the code forward, and which refactorings will\nimprove the entire codebase.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `Pairs self-organize by selecting partners who can best help with the current\ntask. They switch every few hours to share perspectives and knowledge.`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Even if it seems inefficient to use two people to do the work of one, it works\nout in the long run. Pair programming involves two roles: the driver and the\nnavigator. In simple term, the driver writes code and the navigator supports\nthis process by paying attention and making suggestions and asking questions.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `By having a second pair of eyes looking at the code writing process, bugs, bad\ndecisions and distractions are reduced and code quality goes up. Producing\nbetter quality code on the first try becomes more efficient.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://tuple.app/pair-programming-guide/your-first-pairing-session\"\n      }\n    }, `recommended way to\nstart`), ` with\npair programming is to do it with someone nice, when you're feeling fresh and\ncomfortable, by working on something simple. This first taste is more about\nlearning how to pair program than reaping all the benefits from the get go.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Also, use the following\n`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://tuple.app/pair-programming-guide/template\"\n      }\n    }, `template`), `:`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Agree on the high-level goal out loud.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Break the work into a handful of tasks and prioritize them.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Decide your driver/navigator swapping strategy.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Configure git to share credit.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Eliminate distractions.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Work.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, `Analyze the session with a mini retro.`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"headings":[{"value":"Software engineering","depth":1},{"value":"Pair programming","depth":2}]}},"pageContext":{"id":"55bbff86-b1fb-5419-b7ab-eadafc070e56"}}