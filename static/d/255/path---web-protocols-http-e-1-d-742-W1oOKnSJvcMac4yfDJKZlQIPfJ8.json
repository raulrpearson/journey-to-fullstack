{"data":{"mdx":{"id":"f63068da-1a4f-5566-8386-baff52e2a34c","fields":{"title":"Http","slug":"/web-protocols/http"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `HTTP`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `How does HTTP work?`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The best resource I found is this Quora answer to `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.quora.com/How-does-HTTP-work/answer/Charles-Knouse-2\"\n      }\n    }, `How does HTTP\nwork?`), `. In\nsummary, when you input a URL into your browser's location bar and press enter,\nthis is typically and loosely what happens:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Using DNS, the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://en.wikipedia.org/wiki/URL\"\n      }\n    }, `URL`), ` is resolved into an IP\naddress.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `A TCP connection is established with the web server answering at that IP\naddress. Alternatively, a TLS-encrypted TCP connection is established if using\nHTTPS.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `HTTP messages are exchanged, the browser sends `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `requests`), ` and the server sends\nback `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `responses`), `. It starts with a GET request for the document referenced by\nthe URL but many more request/response pairs are exchanged to load all of the\ndifferent resources that make up a particular web page.`))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `References`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP\"\n      }\n    }, `HTTP on MDN`))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `How do browsers render web pages?`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Tali Garsiel and Paul Irish's famous `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\"\n      }\n    }, `How Browswers\nWork`), ` give\nsome details about the way browsers process the HTTP responses to render a\nparticular web page.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `The video `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.youtube.com/watch?v=uE3UPEK26U0\"\n      }\n    }, `How do web browsers work? | Web Demystified, Episode\n5`), ` is an easy watch and gives a\nnice overview.`))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Exercises`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Add details of the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\"\n      }\n    }, `HTTP request\nmethods`), ` to your\n`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://apps.ankiweb.net/\"\n      }\n    }, `spaced repetition system`), `.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `Build a low level library that is able to compose and send HTTP requests and\nspit out HTTP responses.`))));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"headings":[{"value":"HTTP","depth":2},{"value":"How does HTTP work?","depth":3},{"value":"References","depth":3},{"value":"How do browsers render web pages?","depth":3},{"value":"Exercises","depth":3}]}},"pageContext":{"id":"f63068da-1a4f-5566-8386-baff52e2a34c"}}