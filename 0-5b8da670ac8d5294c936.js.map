{"version":3,"sources":["webpack:///./src/components/PageToc.jsx","webpack:///./src/components/SiteToc.jsx","webpack:///./src/components/GitHubCorner.jsx","webpack:///./src/components/Layout.jsx"],"names":["StyledAside","Object","styled_base_browser_esm","target","name","styles","StyledList","PageToc","_ref","headings","core_browser_esm","map","h","key","url","href","title","SiteToc","gatsby_browser_entry","query","render","data","SiteToc_StyledAside","SiteToc_StyledList","allMdx","edges","_ref$node","node","id","_ref$node$fields","fields","slug","to","_1502017113","GitHubCorner","_ref4","react_default","a","Fragment","GitHubCorner_ref","className","aria-label","width","height","viewBox","css","_ref2","aria-hidden","d","fill","_ref3","StyledLayout","StyledArticle","Layout","props","components_GitHubCorner","Layout_ref","components_SiteToc","children","components_PageToc"],"mappings":"6HAGMA,EAAcC,OAAAC,EAAA,EAAAD,CAAA,SAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,uFAQXC,EAAaL,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,0HA0BDE,EAbC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACdR,OAAAS,EAAA,EAAAT,CAACD,EAAD,KACEC,OAAAS,EAAA,EAAAT,CAAA,6BACAA,OAAAS,EAAA,EAAAT,CAACK,EAAD,KACGG,EAASE,IAAI,SAAAC,GAAC,OACbX,OAAAS,EAAA,EAAAT,CAAA,MAAIY,IAAKD,EAAEE,KACTb,OAAAS,EAAA,EAAAT,CAAA,KAAGc,KAAMH,EAAEE,KAAMF,EAAEI,8BC1BvBhB,EAAcC,OAAAC,EAAA,EAAAD,CAAA,SAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,uFAQXC,EAAaL,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,sMAwDDY,EAtCC,kBACdhB,OAAAS,EAAA,EAAAT,CAACiB,EAAA,YAAD,CACEC,MAAK,aAeLC,OAAQ,SAAAC,GAAI,OACVpB,OAAAS,EAAA,EAAAT,CAACqB,EAAD,KACErB,OAAAS,EAAA,EAAAT,CAACsB,EAAD,KACGF,EAAKG,OAAOC,MAAMd,IACjB,SAAAH,GAAA,IAAAkB,EAAAlB,EACEmB,KACEC,EAFJF,EAEIE,GAFJC,EAAAH,EAGII,OAAUd,EAHda,EAGcb,MAAOe,EAHrBF,EAGqBE,KAHrB,OAME9B,OAAAS,EAAA,EAAAT,CAAA,MAAIY,IAAKe,GACP3B,OAAAS,EAAA,EAAAT,CAACiB,EAAA,KAAD,CAAMc,GAAID,GAAOf,SA3B/BK,KAAAY,mgBCuCaC,EAjEM,SAAAC,GAAA,IAAGrB,EAAHqB,EAAGrB,IAAH,OACnBb,OAAAS,EAAA,EAAAT,CAAAmC,EAAAC,EAAAC,SAAA,KACErC,OAAAS,EAAA,EAAAT,CAACS,EAAA,EAAD,CACEL,OAAMkC,IA4BRtC,OAAAS,EAAA,EAAAT,CAAA,KAAGc,KAAMD,EAAK0B,UAAU,gBAAgBC,aAAW,yBACjDxC,OAAAS,EAAA,EAAAT,CAAA,OACEyC,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRC,IAAGC,EAQHC,cAAY,QAEZ9C,OAAAS,EAAA,EAAAT,CAAA,QAAM+C,EAAE,sDACR/C,OAAAS,EAAA,EAAAT,CAAA,QACE+C,EAAE,2LACFC,KAAK,eACLJ,IAAGK,EAGHV,UAAU,aAEZvC,OAAAS,EAAA,EAAAT,CAAA,QACE+C,EAAE,shBACFC,KAAK,eACLT,UAAU,kBCxDdW,EAAelD,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,iFAOZ+C,EAAgBnD,OAAAC,EAAA,EAAAD,CAAA,WAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,qBAMbI,EAAW,CACf,CACEK,IAAK,wBACLE,MAAO,wBAET,CACEF,IAAK,yBACLE,MAAO,yBAET,CACEF,IAAK,mBACLE,MAAO,mQAwCIqC,IApCA,SAAAC,GAAK,OAClBrD,OAAAS,EAAA,EAAAT,CAAAmC,EAAAC,EAAAC,SAAA,KACErC,OAAAS,EAAA,EAAAT,CAACsD,EAAD,CACEzC,IAAG,yDAELb,OAAAS,EAAA,EAAAT,CAACkD,EAAD,KACElD,OAAAS,EAAA,EAAAT,CAACS,EAAA,EAAD,CACEL,OAAMmD,IAsBRvD,OAAAS,EAAA,EAAAT,CAACwD,EAAD,MACAxD,OAAAS,EAAA,EAAAT,CAACmD,EAAD,KAAgBE,EAAMI,UACtBzD,OAAAS,EAAA,EAAAT,CAAC0D,EAAD,CAASlD,SAAUA","file":"0-5b8da670ac8d5294c936.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 2em;\n  align-self: start;\n  height: calc(100vh - 4em);\n  overflow: scroll;\n`;\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n  margin-left: 0;\n  a {\n    text-decoration: none;\n    color: gray;\n  }\n  a:hover {\n    filter: brightness(50%);\n  }\n`;\n\nconst PageToc = ({ headings }) => (\n  <StyledAside>\n    <h4>IN THIS ARTICLE</h4>\n    <StyledList>\n      {headings.map(h => (\n        <li key={h.url}>\n          <a href={h.url}>{h.title}</a>\n        </li>\n      ))}\n    </StyledList>\n  </StyledAside>\n);\n\nexport default PageToc;\n","import React from 'react';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 2em;\n  align-self: start;\n  height: calc(100vh - 4em);\n  overflow: scroll;\n`;\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n  margin-left: 0;\n  & > li {\n    text-transform: uppercase;\n    font-family: 'Avenir Next';\n    font-weight: bold;\n  }\n  a {\n    text-decoration: none;\n    color: gray;\n  }\n  a:hover {\n    filter: brightness(50%);\n  }\n`;\n\nconst SiteToc = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMdx {\n          edges {\n            node {\n              id\n              fields {\n                title\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <StyledAside>\n        <StyledList>\n          {data.allMdx.edges.map(\n            ({\n              node: {\n                id,\n                fields: { title, slug }\n              }\n            }) => (\n              <li key={id}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          )}\n        </StyledList>\n      </StyledAside>\n    )}\n  />\n);\n\nexport default SiteToc;\n","// Concept and original code taken from:\n// https://github.com/tholman/github-corners\nimport React from 'react';\nimport { Global, css } from '@emotion/core';\n\nconst GitHubCorner = ({ url }) => (\n  <>\n    <Global\n      styles={css`\n        .github-corner:hover .octo-arm {\n          animation: octocat-wave 560ms ease-in-out;\n        }\n        @keyframes octocat-wave {\n          0%,\n          100% {\n            transform: rotate(0);\n          }\n          20%,\n          60% {\n            transform: rotate(-25deg);\n          }\n          40%,\n          80% {\n            transform: rotate(10deg);\n          }\n        }\n        @media (max-width: 500px) {\n          .github-corner:hover .octo-arm {\n            animation: none;\n          }\n          .github-corner .octo-arm {\n            animation: octocat-wave 560ms ease-in-out;\n          }\n        }\n      `}\n    />\n    <a href={url} className=\"github-corner\" aria-label=\"View source on GitHub\">\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        css={css`\n          fill: #333333;\n          color: #fff;\n          position: fixed;\n          top: 0;\n          border: 0;\n          right: 0;\n        `}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          css={css`\n            transform-origin: 130px 106px;\n          `}\n          className=\"octo-arm\"\n        />\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        />\n      </svg>\n    </a>\n  </>\n);\n\nexport default GitHubCorner;\n","import React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport PageToc from './PageToc';\nimport SiteToc from './SiteToc';\nimport GitHubCorner from './GitHubCorner';\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr 250px;\n  gap: 1.5em;\n  margin: 2em 1em;\n`;\n\nconst StyledArticle = styled.article`\n  min-width: 300px;\n`;\n\n// This will be the result of a query eventually, once I've figured out how to\n// do a query with $id and pass that data into the component through props\nconst headings = [\n  {\n    url: '#glossary-of-concepts',\n    title: 'Glossary of concepts'\n  },\n  {\n    url: '#javascript-frameworks',\n    title: 'JavaScript frameworks'\n  },\n  {\n    url: '#a-review-of-es6',\n    title: 'A review of ES6'\n  }\n];\n\nconst Layout = props => (\n  <>\n    <GitHubCorner\n      url={`https://github.com/raulrpearson/journey-to-fullstack`}\n    />\n    <StyledLayout>\n      <Global\n        styles={css`\n          code {\n            background: #f2f2f2;\n            font-family: 'Inconsolata', monospace;\n            font-size: 1em;\n            padding: 3px;\n          }\n\n          pre {\n            font-size: 1em;\n            line-height: 1.2em;\n            background: #f2f2f2;\n            overflow: scroll;\n            padding: 1em;\n          }\n\n          pre > code {\n            padding: 0;\n            line-height: 1.2em;\n          }\n        `}\n      />\n      <SiteToc />\n      <StyledArticle>{props.children}</StyledArticle>\n      <PageToc headings={headings} />\n    </StyledLayout>\n  </>\n);\n\nexport default Layout;\n"],"sourceRoot":""}