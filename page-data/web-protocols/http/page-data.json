{"componentChunkName":"component---src-components-layout-jsx","path":"/web-protocols/http","webpackCompilationHash":"65627bb980c34939f462","result":{"data":{"mdx":{"id":"3aba26cb-999f-576e-8832-d44e5bea6c37","fields":{"title":"Http","slug":"/web-protocols/http"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"HTTP\"), mdx(\"h3\", null, \"How does HTTP work?\"), mdx(\"p\", null, \"The best resource I found is this Quora answer to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.quora.com/How-does-HTTP-work/answer/Charles-Knouse-2\"\n  }), \"How does HTTP\\nwork?\"), \". In\\nsummary, when you input a URL into your browser's location bar and press enter,\\nthis is typically and loosely what happens:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Using DNS, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/URL\"\n  }), \"URL\"), \" is resolved into an IP\\naddress.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A TCP connection is established with the web server answering at that IP\\naddress. Alternatively, a TLS-encrypted TCP connection is established if using\\nHTTPS.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"HTTP messages are exchanged, the browser sends \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"requests\"), \" and the server sends\\nback \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"responses\"), \". It starts with a GET request for the document referenced by\\nthe URL but many more request/response pairs are exchanged to load all of the\\ndifferent resources that make up a particular web page.\"))), mdx(\"h3\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP\"\n  }), \"HTTP on MDN\"))), mdx(\"h3\", null, \"How do browsers render web pages?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Tali Garsiel and Paul Irish's famous \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\"\n  }), \"How Browswers\\nWork\"), \" give\\nsome details about the way browsers process the HTTP responses to render a\\nparticular web page.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The video \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=uE3UPEK26U0\"\n  }), \"How do web browsers work? | Web Demystified, Episode\\n5\"), \" is an easy watch and gives a\\nnice overview.\"))), mdx(\"h3\", null, \"Exercises\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add details of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\"\n  }), \"HTTP request\\nmethods\"), \" to your\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://apps.ankiweb.net/\"\n  }), \"spaced repetition system\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Build a low level library that is able to compose and send HTTP requests and\\nspit out HTTP responses.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"HTTP","depth":2},{"value":"How does HTTP work?","depth":3},{"value":"References","depth":3},{"value":"How do browsers render web pages?","depth":3},{"value":"Exercises","depth":3}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"3aba26cb-999f-576e-8832-d44e5bea6c37"}}}