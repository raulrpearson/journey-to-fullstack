{"componentChunkName":"component---src-components-layout-jsx","path":"/web/solid","webpackCompilationHash":"8ea4e166ff78d1174f57","result":{"data":{"mdx":{"id":"911481de-51cd-53a3-a02a-2462ccfcedec","fields":{"title":"Solid","slug":"/web/solid"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Solid\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Solid\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.mit.edu/\"\n  }), \"Solid\"), \" (Social Linked Data) is a web decentralization\\nproject led by Tim Berners-Lee, the inventor of the World Wide Web. The project:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"aims to radically change the way Web applications work today, resulting in\\ntrue data ownership as well as improved privacy\")), mdx(\"p\", null, \"by developing a platform for linked-data applications that are completely\\ndecentralized and fully under users' control rather than controlled by other\\nentities.\"), mdx(\"p\", null, \"Solid's central focus is to enable the discovery and sharing of information in a\\nway that preserves privacy. A user stores personal data in \\\"pods\\\" (personal\\nonline data stores) hosted wherever the user desires. Applications that are\\nauthenticated by Solid are allowed to request data if the user has given the\\napplication permission.\"), mdx(\"p\", null, \"A user may distribute personal information among several pods; for example,\\ndifferent pods might contain personal profile data, contact information,\\nfinancial information, health, travel plans, or other information. The user\\ncould then join an authenticated social-networking application by giving it\\npermission to access appropriate information in a specific pod.\"), mdx(\"p\", null, \"The user retains complete ownership and control of data in the user's pods: what\\ndata each pod contains, where each pod is stored, and which applications have\\npermission to use the data.\"), mdx(\"h2\", null, \"Philosophy\"), mdx(\"p\", null, \"In \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ruben.verborgh.org/blog/2017/12/20/paradigm-shifts-for-the-decentralized-web/\"\n  }), \"\\\"Paradigm shifts for the decentralized\\nWeb\\\"\"), \",\\nRuben Verborgh lays out several interesting ideas:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In this blog post, I will discuss three paradigm shifts we need to prepare for\\nif we want to build Web applications with a decentralized mindset:\"), mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"End users become data owners. This is the most well-known decentralization\\naspect: we store our data in places of our choice, which improves privacy and\\ncontrol.\")), mdx(\"ol\", _extends({\n    parentName: \"blockquote\"\n  }, {\n    \"start\": 2\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Apps become views. As apps become decoupled from data, they start acting\\nas interchangeable views rather than the single gateway to that data.\")), mdx(\"ol\", _extends({\n    parentName: \"blockquote\"\n  }, {\n    \"start\": 3\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Interfaces become queries. Data will be distributed across highly diverse\\ninterfaces, so sustainable apps need declarative contracts instead of custom\\ndata requests.\")), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"[...]\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The main challenge with full decentralization of data is scalability. In the\\nMastodon scenario, there are still relatively few servers for many users. In the\\nSolid scenario, there might even be more data pods than users. In the end,\\ndecentralization will go hand in hand with dynamic data replication, which will\\nneed to be balanced carefully with fine-grained access control possibilities in\\norder to guarantee data privacy.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"[...]\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In contrast, decentralized Web applications decouple data and applications:\\nyou enter data only once\\u2014in your own data pod. Instead of maintaining\\ncredentials with each app, you log in through your data pod and give apps\\npermission to read or write specific parts of your data. The Web\\u2019s ecosystem\\nthereby evolves from bundled data+service packages into applications as\\ninterchangeable views, wherein each Web app provides consistent visualizations,\\ninteractions, and processing over your personal data pod. Furthermore, those\\napps let you interact with any other data pods you have access to, such as those\\nof your friends. Applications ask rather than own, and they are able to reuse\\ndata create by other apps, avoiding vendor lock-in.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"[...]\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The combination of decentralization and query execution also confronts us with\\na temporally different way of interacting with data. In traditional Web\\napplications, the procedure is typically \\u201Csend query\\u2014wait for execution to\\ncomplete\\u2014act on all results\\u201D. In a decentralized setting, we know that data\\ncollection will take time, so applications should be prepared to do more useful\\nthings instead of just waiting. The procedure becomes \\u201Csend query\\u2014act on each\\nincoming result\\u201D, processing every piece of incoming data a streaming way. In\\ngeneral, completeness should never be assumed, given that the Web is an open\\nworld. This is an additional indication of how radically the relation between\\ndata and applications will change.\")), mdx(\"h2\", null, \"Specification overview\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.inrupt.com/docs/intro-to-solid-spec\"\n  }), \"Solid\"), \" is a proposed set of\\nconventions and tools for building decentralized social applications based on\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/DesignIssues/LinkedData.html\"\n  }), \"Linked Data\"), \" principles. Solid\\nis modular and extensible. It relies as much as possible on existing W3C\\nstandards and protocols.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Identity\"), \": Solid uses\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.w3.org/2005/Incubator/webid/spec/identity/\"\n  }), \"WebID\"), \" URIs as\\nuniversal usernames or actor identifiers. WebIDs provide globally unique\\ndecentralized identifiers, enable cross-service federated signin, prevent\\nservice provider lock-in, and give users control over their own identity.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Profiles\"), \": the WebID URI's primary function is to point to the location of a\\npublic WebID Profile Document. Solid uses these for management of user identity\\nand security credentials (such as public keys), and user preferences\\ndiscovery. Profiles are used by many actor types like users, groups,\\norganizations, devices and software applications.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A WebID URI, when dereferenced, yields a WebID Profile Document in a Linked\\nData format (Turtle by default, but often available as JSON-LD or HTML+RDFa).\\nParsing this document provides a client application with useful information,\\nsuch as the user's name and profile image, links to user preferences and\\nrelated documents, and lists of public key certificates or other relevant\\nidentity credentials.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/solid-webid-profiles.md\"\n  }), \"Solid WebID Profiles\\nSpecification\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Authentication\"), \": the process of determining a user\\u2019s identity. Applications\\nusually manage authentication with usernames and passwords as well as a recovery\\nmechanism using typically email.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Solid currently uses\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/2005/Incubator/webid/spec/tls/\"\n  }), \"WebID-TLS\"), \" as its primary\\nauthentication mechanism. Alternative complementary mechanisms are also being\\nactively investigated. In addition, Solid recommends that server\\nimplementations also offer secondary authentication available for users for\\nAccount Recovery (via email or some other out-of-band mechanism).\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/authn-webid-tls.md\"\n  }), \"Solid WebID-TLS\\nSpecification\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The Solid team is currently implementing support for WebID-OIDC as another\\nprimary authentication mechanism. It is based on the OAuth2/OpenID Connect\\nprotocols, adapted for WebID based decentralized use cases.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/webid-oidc-spec\"\n  }), \"WebID-OIDC\\nSpecification\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"There are several other authentication mechanisms that are currently being\\ninvestigated, such as combinations of traditional username-and-password\\nauthentication and WebID-TLS Delegation.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Regardless of the primary authentication mechanism, bearer tokens and other\\nproofs of identity tend to get lost by users. Passwords can be forgotten,\\nbrowser certificates can be lost to hardware failure, and so on. Solid\\nrecommends that secondary Account Recovery mechanisms are provided by server\\nimplementers, to aid in these scenarios.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Authorization and access control\"), \": the process of deciding whether a user\\nhas access to a particular resource. Solid currently uses the Web Access\\nControl (WAC) mechanism for cross-domain authorization for all its resources.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/web-access-control-spec\"\n  }), \"Solid WAC\\nSpecification\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Content representation\"), \": Solid deals with reading and writing two kinds of\\nresources: Linked Data resources (RDF in the form of JSON-LD, Turtle, HTML+RDFa,\\netc.) and everything else (binary data and non-linked-data structured text).\\nyou can build Solid applications with non-linked data resources, using actual\\nRDF-based Linked Data provides you with considerable benefits in terms of\\ninteroperability with the rest of the Solid app ecosystem.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/content-representation.md\"\n  }), \"Solid Content\\nRepresentation\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reading and writing resources\"), \": Solid extends the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/ldp/\"\n  }), \"Linked Data\\nPlatform\"), \" spec to provide a simple REST API for CRUD\\noperations on resources and containers. Solid also provides a WebSockets based\\nAPI for a PubSub (Publish/Subscribe) mechanism, through which clients can be\\nnotified in real time of changes affecting a give resource.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/api-rest.md\"\n  }), \"HTTPS REST\\nAPI\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/api-websockets.md\"\n  }), \"WebSockets\\nAPI\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Social web app protocols\"), \": Solid provides a number of specs and\\nrecommendations to help developers achieve interoperability between various\\nsocial web applications that are part of the ecosystem. Currently,\\nnotifications. API recommendations for managing subscriptions and friends lists\\nare still being discussed.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/TR/ldn/\"\n  }), \"Linked Data Notifications\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recommendations for implementations\"), \": for servers and clients.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/recommendations-server.md\"\n  }), \"Recommendations for Server\\nImplementations\"), \".\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"See component spec: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec/blob/master/recommendations-client.md\"\n  }), \"Recommendations for Client\\nImplementations\"), \".\"))), mdx(\"h2\", null, \"Querying\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/SPARQL\"\n  }), \"SPARQL\"), \", a recursive acronym for SPARQL\\nProtocol and RDF Query Language, is an RDF query language \\u2014 that is, a semantic\\nquery language for databases \\u2014 able to retrieve and manipulate data stored in\\nResource Description Framework (RDF) format.\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ruben.verborgh.org/\"\n  }), \"Ruben Verborgh\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rubensworks.net/\"\n  }), \"Ruben\\nTaelman\"), \" and others are doing a lot to connect\\nGraphQL with Linked Data:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Querying on a decentralized Web - Ruben Verborgh - GraphQL Day 2018.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=LUF7plExdv8\"\n  }), \"Video\"), \" and\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://slides.verborgh.org/GraphQL-Day-2018/\"\n  }), \"slides\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rubensworks.net/raw/slides/2019/w3c-data-ws-graphql-rdf/\"\n  }), \"Bridges between GraphQL and\\nRDF (slides)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://comunica.github.io/Article-ISWC2018-Demo-GraphQlLD/#query\"\n  }), \"GraphQL-LD: Linked Data Querying with\\nGraphQL\"), \":\\nIn this article, we introduce GraphQL-LD, an approach that consists of a\\nmethod for transforming GraphQL queries coupled with a JSON-LD context to\\nSPARQL, and a method for converting SPARQL results to the GraphQL\\nquery-compatible response. We demonstrate this approach by implementing it\\ninto the Comunica framework. This approach brings us one step closer towards\\nwidespread Linked Data consumption for application development.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check out the code for the modules in the GraphQL-LD system:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rubensworks/graphql-to-sparql.js\"\n  }), \"graphql-to-sparql.js\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rubensworks/sparqljson-to-tree.js\"\n  }), \"sparqljson-to-tree.js\"), \".\\nAlso, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://query.linkeddatafragments.org/\"\n  }), \"live demo\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.hypergraphql.org/\"\n  }), \"HyperGraphQL\"), \": a GraphQL interface for\\nquerying and serving linked data on the Web. It is designed to support\\nfederated querying and exposing data from multiple linked data services using\\nGraphQL query language and schemas. The core of the response is a\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://json-ld.org/\"\n  }), \"JSON-LD\"), \" object, which extends the standard JSON with\\nthe JSON-LD context enabling semantic disambiguation of the contained data.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://comunica.github.io/Article-ISWC2018-Resource/\"\n  }), \"Comunica: a Modular SPARQL Query Engine for the\\nWeb\"), \". Also, what it\\nseems to be its \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://comunica.linkeddatafragments.org/\"\n  }), \"home page\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/comunica/comunica\"\n  }), \"main\\nGitHub repo\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://linkeddatafragments.org/concept/\"\n  }), \"Linked Data Fragments\"), \" is a\\nconceptual framework that provides a uniform view on all possible interfaces to\\nRDF, by observing that each interface partitions a dataset into its own specific\\nkind of fragments.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A Linked Data Fragment (LDF) is characterized by a specific selector (subject\\nURI, SPARQL query, \\u2026), metadata (variable names, counts, \\u2026), and controls (links\\nor URIs to other fragments).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/community/rdfjs/\"\n  }), \"RDF JavaScript Libraries Community\\nGroup\"), \" discusses implementations of\\nlibraries for working with RDF and Linked Data in ECMAScript platforms like Web\\nbrowsers and Node.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ruben.verborgh.org/blog/2018/12/28/designing-a-linked-data-developer-experience/\"\n  }), \"\\\"Designing a Linked Data developer\\nexperience\\\"\"), \"\\nprovides a great overview of\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/RubenVerborgh/LDflex\"\n  }), \"LDflex\"), \", a JavaScript DSL for\\nquerying Linked Data on the Web. It presents an\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.github.io/ldflex-playground/\"\n  }), \"application\"), \" including \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/query-ldflex/\"\n  }), \"LDflex\\nfor Solid\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/RubenVerborgh/LDflex-Comunica\"\n  }), \"Comunica for\\nLDflex\"), \". Cool stuff.\"))), mdx(\"h2\", null, \"Resources\"), mdx(\"h3\", null, \"Repositories of interest\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-spec\"\n  }), \"solid-spec\"), \": the Solid spec and\\narchitecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/node-solid-server\"\n  }), \"node-solid-server\"), \": Solid server\\nin Node.js. It lets you run a Solid server on top of the file-system. You can\\nuse it as a command-line tool (easy) or as a library (advanced).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/solid-auth-client\"\n  }), \"solid-auth-client\"), \": browser\\nlibrary that allows your apps to securely log in to Solid data pods and read\\nand write data from them.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/linkeddata/rdflib.js/\"\n  }), \"rdflib.js\"), \": JavaScript RDF library\\nfor browsers and Node.js. Also, repos from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rdfjs\"\n  }), \"RDFJS\\norg\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rubensworks/graphql-to-sparql.js\"\n  }), \"graphql-to-sparql.js\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"React resources by Inrupt:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Inrupt-inc/solid-react-sdk\"\n  }), \"solid-react-sdk\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Inrupt-inc/solid-style-guide\"\n  }), \"solid-style-guide\"), \",\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Inrupt-inc/generator-solid-react\"\n  }), \"generator-solid-react\"), \"\\nand\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Inrupt-inc/solid-react-components\"\n  }), \"solid-react-components\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid\"\n  }), \"Solid organization\"), \" GitHub page.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Inrupt-inc\"\n  }), \"Inrupt organization\"), \" GitHub page.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jeff-zucker/solid-file-client\"\n  }), \"solid-file-client\"), \", a\\nlibrary for creating and managing files and folders in Solid data stores.\"))), mdx(\"h3\", null, \"Interesting apps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://forum.solidproject.org/c/1-about-solid/app-communities\"\n  }), \"Ideas for Solid\\napps\"), \" on Solid\\nDiscourse forum.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://inrupt.com/solid-app-listing\"\n  }), \"Solid app listing\"), \" on Inrupt.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dokie.li/\"\n  }), \"dokieli\"), \" is a clientside editor for decentralised article\\npublishing, annotations and social interactions.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"graphMetrix Construction Linked Data Platform:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphmetrix.com/web/construction\"\n  }), \"Trinity\"), \" transforms your data silos\\ninto Solid linked actionable information that you control.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://darcy.is/\"\n  }), \"Darcy\"), \". Social media done proper. Darcy will allow\\neveryone to run their own federated social media instance \\u2013 without having to\\nworry about technology, moderation or legal compliance, because Darcy will take\\ncare of that for you \\u2013 if you want!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.solidpay.org/\"\n  }), \"Solid Pay\"), \" is about making payments between two\\npeople on the Web. It builds heavily on the Solid framework and the\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webcredits.github.io/spec/\"\n  }), \"webcredits\"), \" specification.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/noeldemartin/solid-focus\"\n  }), \"solid-focus\"), \" a task manager\\nimplemented in Vue, using the Solid protocol to store data into a Solid POD.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.formrouter.com/solidtest/solid.htm\"\n  }), \"FormRouter\"), \". \\\"Using a\\nFormRouter Account, it is now possible to setup an online form that can route\\ndirectly into a SOLID POD. This allows any person with a SOLID POD to get a copy\\nof the form data they filled out. The submission data may include a copy of the\\nform as a PDF attachment. We have also created a File Extraction Utility to open\\nfile attachments from your POD inbox.\\\"\"))), mdx(\"h3\", null, \"Related links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.bourgeoa.ga/solid-wiki/index.php?title=Main_Page\"\n  }), \"solid-wiki\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solidpodit.com/\"\n  }), \"Solid POD It\"), \". All you need to know about the Solid\\nWeb and PODs.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://inrupt.com/\"\n  }), \"Inrupt\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.mit.edu/\"\n  }), \"Solid at MIT\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://datatransferproject.dev/\"\n  }), \"Data Transfer Project\"), \" was formed in\\n2017 to create an open-source, service-to-service data portability platform so\\nthat all individuals across the web could easily move their data between online\\nservice providers whenever they want.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://safenetwork.tech/\"\n  }), \"SAFE Network\"), \". Freedom of expression, control of\\npersonal data, private and secure communications, and a whole new economy.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.gitbook.io/solid-hacks/\"\n  }), \"Solid Hacks\"), \". Solid hacks shows you\\nhow to have the most satisfying web experience ever. You don't need programming\\nability. Just the ability to click, drag and drop files, and edit text. This\\nwill enable you to combine apps, data and functionality in new innovative\\nways.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Pieter Heyvaert put together this super detailed and awesome\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pieterheyvaert.com/blog/2019/03/30/solid-chess-interaction\"\n  }), \"explanation\"), \"\\nof how his chess app works with Solid.\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"First, we list the different features of the chess app. Second, we elaborate\\non the three high-level components of the app. Third, we list the different\\nsteps that are taken when certain actions are done by a player. Finally, we\\ndiscuss how the data generated by this app can be used by other apps.\")))), mdx(\"h3\", null, \"Community\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/solid/community\"\n  }), \"solid/community\"), \": documentation,\\nguidelines, discussion, and best practices for the Solid community.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.reddit.com/r/solid\"\n  }), \"r/SOLID\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://forum.solidproject.org/\"\n  }), \"Discourse forum\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The Gitter \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/solid/home\"\n  }), \"Solid\"), \" and\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitter.im/linkeddata/home\"\n  }), \"linkeddata\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/community/solid/\"\n  }), \"W3C Solid Community Group\")))), mdx(\"h2\", null, \"Understanding Solid PODs\"), mdx(\"p\", null, \"A POD is a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://solid.inrupt.com/how-it-works\"\n  }), \"personal storage space\"), \"\\nprovided to you by a Solid enabled web server:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Store anything you want in your own Solid POD. PODs are like secure USB sticks\\nfor the Web, that you can access from anywhere. When you give others access to\\nparts of your POD, they can react to your photos and share their memories with\\nyou. You decide which things apps and people can see.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Think of your Solid POD as your own private website, except that your data\\ninteroperates with all your apps, which means you have your own personal API to\\ngo along with it. When you post comments or videos online, your friends can view\\nthem with whatever app they like, such as an album viewer or a social feed. It\\u2019s\\nyour data, that can be shaped in any way or form.\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You can have as many PODs as you like, and they live on Solid enabled Web\\nservers. Install the Solid Server on your own server at your home or workplace,\\nor Get a Solid POD from a listed provider.\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Solid","depth":1},{"value":"Philosophy","depth":2},{"value":"Specification overview","depth":2},{"value":"Querying","depth":2},{"value":"Resources","depth":2},{"value":"Repositories of interest","depth":3},{"value":"Interesting apps","depth":3},{"value":"Related links","depth":3},{"value":"Community","depth":3},{"value":"Understanding Solid PODs","depth":2}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"911481de-51cd-53a3-a02a-2462ccfcedec"}}}