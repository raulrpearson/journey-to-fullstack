{"componentChunkName":"component---src-components-layout-jsx","path":"/tools","webpackCompilationHash":"9cd9e196913df4990507","result":{"data":{"mdx":{"id":"8be09fa5-0a3a-5194-93c6-e89bc728e3b4","fields":{"title":"Tools","slug":"/tools"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/semantic-release/semantic-release\"\n  }), \"Semantic release\"), \"\\nautomates the whole package release workflow including: determining the next\\nversion number, generating the release notes and publishing the package. This\\nremoves the immediate connection between human emotions and version numbers,\\nstrictly following the Semantic Versioning specification.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://editorconfig.org/\"\n  }), \"Editorconfig\"), \" helps maintain consistent coding\\nstyles for multiple developers working on the same project across various\\neditors and IDEs. The EditorConfig project consists of a file format for\\ndefining coding styles and a collection of text editor plugins that enable\\neditors to read the file format and adhere to defined styles. EditorConfig files\\nare easily readable and they work nicely with version control systems.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://lab.github.com/courses\"\n  }), \"GitHub courses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/\"\n  }), \"mkcert\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"iTerm2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fish\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Practice \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.emmet.io/cheat-sheet/\"\n  }), \"Emmet\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Childs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Siblings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Climb-up\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiplication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Item numbering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Grouping\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Id and class\")))), mdx(\"h2\", null, \"vim\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vimcasts.org/episodes/tabs-and-spaces/\"\n  }), \"vimcasts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vimcasts.org/episodes/tabs-and-spaces/\"\n  }), \"indentation and tabs\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tabstop: width of a tab character\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"expandtab: set to use spaces instead of tab chars\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"softtabstop: set to fine tune amount of whitespace to be inserted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shiftwidth: amount of ws to insert or remove using indentation\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"commands in normal mode\")), mdx(\"h2\", null, \"VS Code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pair programming with \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://visualstudio.microsoft.com/services/live-share/\"\n  }), \"VS Live\\nShare\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.to/vintharas/boost-your-coding-fu-with-visual-studio-code-and-vimboost-your-coding-fu-with-visual-studio-code-and-vim-502h\"\n  }), \"Vim in VS\\nCode\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vscodecandothat.com/\"\n  }), \"VS Code can do that\"))), mdx(\"h2\", null, \"Browser Devtools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/channel/UCwktrTEq-dC49H1NGAC0dWQ\"\n  }), \"Youtube\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://umaar.com/dev-tips/\"\n  }), \"Site\"))), mdx(\"h2\", null, \"nnn\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jarun/nnn#usage\"\n  }), \"Usage\"))), mdx(\"h2\", null, \"tmux\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://robots.thoughtbot.com/a-tmux-crash-course\"\n  }), \"Crash course\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gist.githubusercontent.com/spicycode/1229612/raw/e24eac21b20020b0cce10020e979ec0a142a356c/tmux.conf\"\n  }), \"tmux.conf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://leanpub.com/the-tao-of-tmux/read\"\n  }), \"The Tao of tmux\"))), mdx(\"h2\", null, \"Daily practice\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read and study Clean Code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read and study The Pragmatic Programmer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learn about CI tools and workflows\")), mdx(\"h2\", null, \"Version control\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Understand and write about Git flows and GitHub pull requests\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Another great guide to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/RomuloOliveira/commit-messages-guide\"\n  }), \"great commit\\nmessages\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.conventionalcommits.org/en/v1.0.0-beta.3/\"\n  }), \"Conventional commits\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Great article about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hackernoon.com/these-6-essential-tools-will-maintain-your-npm-modules-for-you-4cbbee88e0cb\"\n  }), \"code\\nmaintenance\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Linus gave \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=4XpnKHJAok8\"\n  }), \"a talk at Google\"), \"\\nwhere he spoke about the motivation and decisions that went into creating Git,\\nas well as trust in open source projects.\"))), mdx(\"h3\", null, \"Understanding \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"upstream\")), mdx(\"p\", null, \"GitHub tells you to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git push -u origin master\"), \". \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/a/37770744\"\n  }), \"This SO\\nanswer\"), \" gives some insight into what\\nupstream is and why that is required.\"), mdx(\"p\", null, \"Some of my takeaways:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An upstream is simply another branch name, usually a remote-tracking branch,\\nassociated with a (regular, local) branch.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each branch can have 0 or 1 upstream.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Setting an upstream is convenient becaues then many git commands can be used\\nwithout arguments to produce expected results (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fetch\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"merge\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rebase\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pull\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"status\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"push\"), \" = \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fetch\"), \" followed by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"merge\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rebase\"))), mdx(\"h2\", null, \"JavaScript module and package managers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand and write about npm, npx, ncu, package.json, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand npm audit results\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Understand how to create a package.json from scratch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"yarn workspaces and monorepos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check out \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.pikapkg.com/about/\"\n  }), \"Pika\"), \". Pika's mission is to make\\nmodern JavaScript more accessible by making it easier to find, publish,\\ninstall, and use modern packages on npm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lerna\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check out \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/yalc\"\n  }), \"yalc\"), \". Better workflow than\\nnpm/yarn link for package authors.\")), mdx(\"h3\", null, \"Publishing on npm\"), mdx(\"p\", null, \"This \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.freecodecamp.org/how-to-make-a-beautiful-tiny-npm-package-and-publish-it-2881d4307f78\"\n  }), \"article from\\nFreecodecamp\"), \"\\ngoes over the least possible work from zero to published package. In summary:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Put your code inside a folder. The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"), \" in that folder should\\nhave a name and version at the very least.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create an account on npm and log in using the command line: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm adduser\"), \" or\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm login\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Publish with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm publish\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm publish --access=public\"), \" if you've used a\\nscoped package name, since scoped packages are published privately by\\ndefault (and you need a paid account to publish privately).\")), mdx(\"p\", null, \"Some additional notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Those steps will get you from zero to published, but there's a bit more that\\nyou'd typically want to do: add a README, a LICENSE, more fields to the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" files, badges to your README file, an .npmignore file, etc.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Understand \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://semver.org/\"\n  }), \"semantic versioning\"), \" so that you can assign\\nversions correctly. Note that you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm version [major|minor|patch]\"), \" to\\nupdate your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" from the command line. The command has more options,\\ncheck them out.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Understand \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.npmjs.com/misc/scope\"\n  }), \"package scoping\"), \" in case you\\nwant to use that feature.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.greenkeeper.io/one-simple-trick-for-javascript-package-maintainers-to-avoid-breaking-their-user-s-software-and-to-6edf06dc5617\"\n  }), \"Understand\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.npmjs.com/cli/dist-tag\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"npm dist-tag\")), \" and how to\\nuse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm publish --tag=<tag-name>\"), \". When you publish, npm puts that new\\nversion on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"latest\"), \" tag by default. If you're maintaining different major\\nversions of your package, this could create problems for your users. If you\\npublish a patch for your 3.x version, your users will install that instead of\\nyour latest 4.x. Learn how to use tags to manage this. You could have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"next\"), \"\\nfor a 5.x work in progress, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"latest\"), \" for your stable up to date 4.x work and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3.x-latest\"), \" for maintenance.\"))), mdx(\"h3\", null, \"Developing an npm package\"), mdx(\"p\", null, \"The short version: use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.npmjs.com/cli/link.html\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"npm link\")), \". But\\nif you need to test preinstall/postinstall hooks for your package, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm link\"), \"\\nwon\\u2019t run those hooks, so \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/@the1mills/how-to-test-your-npm-module-without-publishing-it-every-5-minutes-1c4cb4b369be\"\n  }), \"you\\ndo\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm install /absolute/local/path/to/your/other/package\\n\")), mdx(\"p\", null, \"Note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm link\"), \" creates a symlink to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<your-package>\"), \" in the global space,\\nand then when you call npm link viking from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<your-project>\"), \", it creates a\\nsymlink not directly to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<your-package>\"), \", but rather to the global symlink. This\\nis an important differences if you are using different global Node.js versions,\\ne.g., NVM. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install /absolute/path/viking\"), \" will alter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm link\"), \" does not.\"), mdx(\"p\", null, \"Check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://lernajs.io/\"\n  }), \"Lerna\"), \", a tool that optimizes the workflow\\naround managing multi-package repositories with git and npm.\"), mdx(\"h2\", null, \"Resources and assets\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open-source illustrations at \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://undraw.co/\"\n  }), \"Undraw\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://iconscout.com/unicons\"\n  }), \"Unicons\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://twitter.com/wesbos/status/1093167287119609858\"\n  }), \"Wes' background pattern\\nresources\"))), mdx(\"h2\", null, \"Bundlers\"), mdx(\"p\", null, \"In the context of web applications, bundlers are tools that transform your\\nsource files to make them optimized for deployment. I think that mainly means\\nsmaller size and less network requests, but it also includes things like\\nmanaging the transformation of things like SASS (good to have in development)\\ninto CSS (required in deployment).\"), mdx(\"p\", null, \"These are some popular bundlers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://webpack.js.org/\"\n  }), \"Webpack\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://parceljs.org/\"\n  }), \"Parcel\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://browserify.org/\"\n  }), \"Browserify\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://rollupjs.org/\"\n  }), \"Rollup\"))), mdx(\"p\", null, \"Here's a\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/js-imaginea/comparing-bundlers-webpack-rollup-parcel-f8f5dc609cfd\"\n  }), \"comparison\"), \"\\nof Webpack, Parcel and Rollup. I'm currently debating myself between Webpack and\\nParcel. Webpack is everywhere, but Parcel seems to provide a better DX. I think\\nI'll try to focus on Parcel for now and be ready to move to Webpack depending of\\nhow they both evolve.\"), mdx(\"p\", null, \"Some of the features to understand bundlers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Configuration. I honestly don't see what the big deal is, but it is nice to\\nhave as zero-config as possible. It seems Parcel provides the lowest config\\nrequirement.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Entry points. Where does the bundler start parsing to do it's thing. I like\\nthat parcel provides an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" entry point out of the box.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Transformations. SASS to CSS, for example. Added with plugins. Again, Parcel\\nseems to handle the most without plugins.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Tree shaking. Eliminating dead code. Not supported by Parcel yet.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Dev server. Watching for changes to your source files and automatically\\nrebuilding your bundles.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Hot Module Replacement (HMR). Being able to reload parts of your running app\\nwithout having to reload the whole app. Speeds up development.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Code splitting. Creating bundles that are broken up into different parts.\\nImproves UX by requiring a smaller initial download. The user can start using\\nthe app while the rest of it is being fetched in the background.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Tools","depth":1},{"value":"vim","depth":2},{"value":"VS Code","depth":2},{"value":"Browser Devtools","depth":2},{"value":"nnn","depth":2},{"value":"tmux","depth":2},{"value":"Daily practice","depth":2},{"value":"Version control","depth":2},{"value":"Understanding upstream","depth":3},{"value":"JavaScript module and package managers","depth":2},{"value":"Publishing on npm","depth":3},{"value":"Developing an npm package","depth":3},{"value":"Resources and assets","depth":2},{"value":"Bundlers","depth":2}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8be09fa5-0a3a-5194-93c6-e89bc728e3b4"}}}