{"version":3,"sources":["webpack:///./src/components/GlobalStyles.jsx","webpack:///./src/components/GitHubCorner.jsx","webpack:///./src/components/SiteToc.jsx","webpack:///./src/components/PageToc.jsx","webpack:///./src/components/Layout.jsx"],"names":["GlobalStyles","Object","core_browser_esm","styles","GlobalStyles_ref","GitHubCorner","_ref4","url","react_default","a","Fragment","GitHubCorner_ref","href","className","aria-label","width","height","viewBox","css","GitHubCorner_ref2","aria-hidden","d","fill","GitHubCorner_ref3","StyledAside","styled_base_browser_esm","target","name","SiteToc","_ref2","hide","gatsby_browser_entry","query","render","data","id","SiteToc_ref","allMdx","edges","map","_ref3","_ref3$node","node","_ref3$node$fields","fields","title","slug","key","to","_1502017113","StyledList","PageToc","_ref","headings","PageToc_StyledAside","h","StyledLayout","StyledArticle","Menu","Layout","props","_this","_React$Component","call","this","state","closed","handleClick","bind","assertThisInitialized_default","setState","components_GlobalStyles","Layout_ref","components_GitHubCorner","components_SiteToc","Layout_ref2","children","components_PageToc","onClick","fa","size","React","Component"],"mappings":"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","file":"0-e7c64f98768e9a54dfef.js","sourcesContent":["import React from 'react';\nimport { Global, css } from '@emotion/core';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      code {\n        background: #f2f2f2;\n        font-family: 'Inconsolata', monospace;\n        font-size: 1em;\n        padding: 3px;\n      }\n\n      pre {\n        font-size: 1em;\n        line-height: 1.2em;\n        background: #f2f2f2;\n        overflow: scroll;\n        padding: 1em;\n        border-radius: 5px;\n        min-width: 0px;\n      }\n\n      pre > code {\n        padding: 0;\n        line-height: 1.2em;\n        min-width: 0px;\n      }\n    `}\n  />\n);\n\nexport default GlobalStyles;\n","// Concept and original code taken from:\n// https://github.com/tholman/github-corners\nimport React from 'react';\nimport { Global, css } from '@emotion/core';\n\nconst GitHubCorner = ({ url }) => (\n  <>\n    <Global\n      styles={css`\n        .github-corner:hover .octo-arm {\n          animation: octocat-wave 560ms ease-in-out;\n        }\n        @keyframes octocat-wave {\n          0%,\n          100% {\n            transform: rotate(0);\n          }\n          20%,\n          60% {\n            transform: rotate(-25deg);\n          }\n          40%,\n          80% {\n            transform: rotate(10deg);\n          }\n        }\n        @media (max-width: 500px) {\n          .github-corner:hover .octo-arm {\n            animation: none;\n          }\n          .github-corner .octo-arm {\n            animation: octocat-wave 560ms ease-in-out;\n          }\n        }\n      `}\n    />\n    <a href={url} className=\"github-corner\" aria-label=\"View source on GitHub\">\n      <svg\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 250 250\"\n        css={css`\n          fill: #333333;\n          color: #fff;\n          position: fixed;\n          top: 0;\n          border: 0;\n          right: 0;\n          z-index: 100;\n        `}\n        aria-hidden=\"true\"\n      >\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n        <path\n          d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n          fill=\"currentColor\"\n          css={css`\n            transform-origin: 130px 106px;\n          `}\n          className=\"octo-arm\"\n        />\n        <path\n          d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n          fill=\"currentColor\"\n          className=\"octo-body\"\n        />\n      </svg>\n    </a>\n  </>\n);\n\nexport default GitHubCorner;\n","import React from 'react';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 0;\n  align-self: start;\n  height: 100vh;\n  overflow: scroll;\n  z-index: 90;\n\n  @media (max-width: 850px) {\n    background-color: white;\n    position: fixed;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n    margin-left: 0;\n    & > li {\n      text-transform: uppercase;\n      font-family: 'Avenir Next';\n      font-weight: bold;\n    }\n    a {\n      text-decoration: none;\n      color: gray;\n    }\n    a:hover {\n      filter: brightness(50%);\n    }\n  }\n`;\n\nconst SiteToc = ({ hide }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMdx {\n          edges {\n            node {\n              id\n              fields {\n                title\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <StyledAside\n        id=\"site-toc\"\n        css={\n          hide &&\n          css`\n            @media (max-width: 850px) {\n              display: none;\n            }\n          `\n        }\n      >\n        <ul>\n          {data.allMdx.edges.map(\n            ({\n              node: {\n                id,\n                fields: { title, slug }\n              }\n            }) => (\n              <li key={id}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          )}\n        </ul>\n      </StyledAside>\n    )}\n  />\n);\n\nexport default SiteToc;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledAside = styled.aside`\n  position: sticky;\n  top: 0;\n  align-self: start;\n  height: 100vh;\n  overflow: scroll;\n`;\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n  margin-left: 0;\n  a {\n    text-decoration: none;\n    color: gray;\n  }\n  a:hover {\n    filter: brightness(50%);\n  }\n`;\n\nconst PageToc = ({ headings }) => (\n  <StyledAside id=\"page-toc\">\n    <h4>IN THIS ARTICLE</h4>\n    <StyledList>\n      {headings.map(h => (\n        <li key={h.url}>\n          <a href={h.url}>{h.title}</a>\n        </li>\n      ))}\n    </StyledList>\n  </StyledAside>\n);\n\nexport default PageToc;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/core';\nimport { FaBars, FaTimes } from 'react-icons/fa';\n\nimport GlobalStyles from './GlobalStyles';\nimport GitHubCorner from './GitHubCorner';\nimport SiteToc from './SiteToc';\nimport PageToc from './PageToc';\n\nconst StyledLayout = styled.div`\n  display: grid;\n  width: 100vw;\n  box-sizing: border-box;\n  grid-template-columns: auto auto auto;\n  gap: 1em;\n  margin: 0;\n\n  & > * {\n    padding: 2em 1em;\n  }\n\n  @media (max-width: 1100px) {\n    grid-template-columns: auto 1fr;\n\n    & > aside#page-toc {\n      display: none;\n    }\n  }\n\n  @media (max-width: 850px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StyledArticle = styled.article`\n  min-width: 100px;\n  max-width: 100%;\n  justify-self: center;\n`;\n\nconst Menu = styled.div`\n  position: fixed;\n  bottom: 1em;\n  right: 1em;\n  z-index: 100;\n  width: 3em;\n  height: 3em;\n  border-radius: 1.5em;\n  box-sizing: border-box;\n  background-color: #333333;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  svg {\n    margin: 0 auto;\n    color: white;\n  }\n\n  @media (min-width: 851px) {\n    display: none;\n  }\n`;\n\n// This will be the result of a query eventually, once I've figured out how to\n// do a query with $id and pass that data into the component through props\nconst headings = [\n  {\n    url: '#glossary-of-concepts',\n    title: 'Glossary of concepts'\n  },\n  {\n    url: '#javascript-frameworks',\n    title: 'JavaScript frameworks'\n  },\n  {\n    url: '#a-review-of-es6',\n    title: 'A review of ES6'\n  }\n];\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { closed: true };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => (state.closed = !state.closed));\n  }\n\n  render() {\n    return (\n      <>\n        <GlobalStyles />\n        {!this.state.closed && (\n          <Global\n            styles={css`\n              html {\n                overflow-y: hidden;\n              }\n            `}\n          />\n        )}\n        <GitHubCorner\n          url={`https://github.com/raulrpearson/journey-to-fullstack`}\n        />\n        <StyledLayout>\n          <SiteToc hide={this.state.closed} />\n          <StyledArticle\n            css={\n              !this.state.closed &&\n              css`\n                overflow: hidden;\n              `\n            }\n          >\n            {this.props.children}\n          </StyledArticle>\n          <PageToc headings={headings} />\n        </StyledLayout>\n        <Menu onClick={this.handleClick}>\n          {this.state.closed ? (\n            <FaBars id=\"times\" size=\"1.4em\" />\n          ) : (\n            <FaTimes id=\"bars\" size=\"1.4em\" />\n          )}\n        </Menu>\n      </>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}